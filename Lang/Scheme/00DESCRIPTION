{{language|Scheme
|strength=strong
|safety=safe
|express=implicit
|checking=dynamic
|parampass=value
|gc=yes
|LCT=yes
|bnf=http://www.r6rs.org/final/html/r6rs/r6rs-Z-H-7.html#node_chap_4}}
{{codepad}}
{{language programming paradigm|functional}}
'''Scheme''' is a multi-[[:Category:Programming Paradigms|paradigm]] programming language. It is one of the two main dialects of [[derived from::Lisp]] and supports a number of programming paradigms but is best known for its support of [[functional programming]]. It was developed by Guy L. Steele and Gerald Jay Sussman in the 1970s. Scheme was introduced to the academic world via a series of papers now referred to as Sussman and Steele's Lambda Papers. There are two standards that define the Scheme language: the official [[IEEE]] standard, and a de facto standard called the ''Revised<sup>n</sup> Report on the Algorithmic Language Scheme'', nearly always abbreviated R''n''RS, where ''n'' is the number of the revision. The current standard is '''R6RS''', and '''R7RS''' is in development.

Scheme's philosophy is minimalist. Scheme provides as few primitive notions as possible, and, where practical, lets everything else be provided by programming libraries.

Scheme was the first dialect of Lisp to choose static (a.k.a. lexical) over dynamic variable scope. It was also one of the first programming languages to support first-class continuations.

==Citations==
* [[wp:Scheme_%28programming_language%29|Wikipedia:Scheme (programming language)]]

{{implementation|Lisp}}