buffer = &70               ; or anywhere in zero page that's good

org &1900
.rot13
         stx buffer
         sty buffer+1
         ldy #0
.loop    lda (buffer),y
         bne decode        ; quit on ASCII 0
         rts
.decode  cmp #&7b          ; high range
         bcs next
         cmp #&41          ; low range
         bcc next
         cmp #&4f
         bcc add13
         cmp #&5b
         bcc sub13
         cmp #&61
         bcc next
         cmp #&6f
         bcc add13
         bcs sub13         ; saves a byte over a jump
.next    iny
         jmp loop
.add13   adc #13           ; we only get here via bcc; so clc not needed
         jmp storeit
.sub13   sec
         sbc #13
.storeit sta (buffer),y
         jmp next
