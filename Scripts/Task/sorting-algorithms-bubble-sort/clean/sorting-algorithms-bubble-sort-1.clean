import StdEnv

bsort :: *(a e) -> *(a e) | Array a e & < e
bsort array
    # (done, array) = sweep 1 True array
    = if done array (bsort array)
where
    sweep :: !Int !Bool !*(a e) -> (!Bool, !*(a e)) | Array a e & < e
    sweep i done array
        | i >= size array = (done, array)
        # (e1, array) = array![i - 1]
          (e2, array) = array![i]
        | e1 > e2 = sweep (i + 1) False {array & [i - 1] = e2, [i] = e1}
        = sweep (i + 1) done array
