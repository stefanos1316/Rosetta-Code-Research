function uniq(sequence s)
integer last=s[1], this, ndx = 1
    for i=2 to length(s) do
        this = s[i]
        if this!=last then
            ndx += 1
            s[ndx] = this
            last = this
        end if
    end for
    return s[1..ndx]
end function

function disjoint_sort(sequence s, sequence idx)
sequence copies
    if length(idx)>1 then
        -- must ensure there are no duplicates,
        -- otherwise eg {7,2,8,8} -> {2,7,8,8},
        --          but {1,6,0,0} -> {0,0,1,6}
        idx = uniq(sort(idx))
        copies = repeat(0, length(idx))
        for i=1 to length(idx) do
            copies[i] = s[idx[i]]
        end for
        copies = sort(copies)
        for i=1 to length(idx) do
            s[idx[i]] = copies[i]
        end for
    end if
    return s
end function

?disjoint_sort({7,6,5,4,3,2,1,0},{7,2,8})
