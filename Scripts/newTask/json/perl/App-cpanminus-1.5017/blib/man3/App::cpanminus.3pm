.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "App::cpanminus 3"
.TH App::cpanminus 3 "2012-07-18" "perl v5.24.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::cpanminus \- get, unpack, build and install modules from CPAN
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    cpanm Module
.Ve
.PP
Run \f(CW\*(C`cpanm \-h\*(C'\fR for more options.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
cpanminus is a script to get, unpack, build and install modules from
\&\s-1CPAN\s0 and does nothing else.
.PP
It's dependency free (can bootstrap itself), requires zero
configuration, and stands alone. When running, it requires only 10MB
of \s-1RAM.\s0
.SH "INSTALLATION"
.IX Header "INSTALLATION"
There are several ways to install cpanminus to your system.
.SS "Package management system"
.IX Subsection "Package management system"
There are Debian packages, RPMs, FreeBSD ports, and packages for other
operation systems available. If you want to use the package management system,
search for cpanminus and use the appropriate command to install. This makes it
easy to install \f(CW\*(C`cpanm\*(C'\fR to your system without thinking about where to
install, and later upgrade.
.SS "Installing to system perl"
.IX Subsection "Installing to system perl"
You can also use the latest cpanminus to install cpanminus itself:
.PP
.Vb 1
\&    curl \-L http://cpanmin.us | perl \- \-\-sudo App::cpanminus
.Ve
.PP
This will install \f(CW\*(C`cpanm\*(C'\fR to your bin directory like
\&\f(CW\*(C`/usr/local/bin\*(C'\fR (unless you configured \f(CW\*(C`INSTALL_BASE\*(C'\fR with
local::lib), so you probably need the \f(CW\*(C`\-\-sudo\*(C'\fR option.
.SS "Installing to local perl (perlbrew)"
.IX Subsection "Installing to local perl (perlbrew)"
If you have perl in your home directory, which is the case if you use
tools like perlbrew, you don't need the \f(CW\*(C`\-\-sudo\*(C'\fR option, since
you're most likely to have a write permission to the perl's library
path. You can just do:
.PP
.Vb 1
\&    curl \-L http://cpanmin.us | perl \- App::cpanminus
.Ve
.PP
to install the \f(CW\*(C`cpanm\*(C'\fR executable to the perl's bin path, like
\&\f(CW\*(C`~/perl5/perlbrew/bin/cpanm\*(C'\fR.
.SS "Downloading the standalone executable"
.IX Subsection "Downloading the standalone executable"
You can also copy the standalone executable to whatever location you'd like.
.PP
.Vb 4
\&    cd ~/bin
\&    curl \-LO http://xrl.us/cpanm
\&    chmod +x cpanm
\&    # edit shebang if you don\*(Aqt have /usr/bin/env
.Ve
.PP
This just works, but be sure to grab the new version manually when you
upgrade because \f(CW\*(C`\-\-self\-upgrade\*(C'\fR might not work for this.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
perl 5.8 or later.
.IP "\(bu" 4
\&'tar' executable (bsdtar or \s-1GNU\s0 tar version 1.22 are rcommended) or Archive::Tar to unpack files.
.IP "\(bu" 4
C compiler, if you want to build \s-1XS\s0 modules.
.IP "\(bu" 4
make
.IP "\(bu" 4
Module::Build (core in 5.10)
.SH "QUESTIONS"
.IX Header "QUESTIONS"
.SS "Another \s-1CPAN\s0 installer?"
.IX Subsection "Another CPAN installer?"
\&\s-1OK,\s0 the first motivation was this: the \s-1CPAN\s0 shell runs out of memory (or swaps
heavily and gets really slow) on Slicehost/linode's most affordable plan with
only 256MB \s-1RAM.\s0 Should I pay more to install perl modules from \s-1CPAN\s0? I don't
think so.
.SS "But why a new client?"
.IX Subsection "But why a new client?"
First of all, let me be clear that \s-1CPAN\s0 and \s-1CPANPLUS\s0 are great tools
I've used for \fIliterally\fR years (you know how many modules I have on
\&\s-1CPAN,\s0 right?). I really respect their efforts of maintaining the most
important tools in the \s-1CPAN\s0 toolchain ecosystem.
.PP
However, for less experienced users (mostly from outside the Perl community),
or even really experienced Perl developers who know how to shoot themselves in
their feet, setting up the \s-1CPAN\s0 toolchain often feels like yak shaving,
especially when all they want to do is just install some modules and start
writing code.
.SS "Zero-conf? How does this module get/parse/update the \s-1CPAN\s0 index?"
.IX Subsection "Zero-conf? How does this module get/parse/update the CPAN index?"
It queries the \s-1CPAN\s0 Meta \s-1DB\s0 site running on Google AppEngine at
<http://cpanmetadb.plackperl.org/>. The site is updated every hour to reflect
the latest changes from fast syncing mirrors. The script then also falls back
to scrape the site <http://search.cpan.org/>.
.PP
Fetched files are unpacked in \f(CW\*(C`~/.cpanm\*(C'\fR and automatically cleaned up
periodically.  You can configure the location of this with the
\&\f(CW\*(C`PERL_CPANM_HOME\*(C'\fR environment variable.
.SS "Where does this install modules to? Do I need root access?"
.IX Subsection "Where does this install modules to? Do I need root access?"
It installs to wherever ExtUtils::MakeMaker and Module::Build are
configured to (via \f(CW\*(C`PERL_MM_OPT\*(C'\fR and \f(CW\*(C`PERL_MB_OPT\*(C'\fR). So if you're
using local::lib, then it installs to your local perl5
directory. Otherwise it installs to the site_perl directory that
belongs to your perl.
.PP
cpanminus at a boot time checks whether you have configured
local::lib, or have the permission to install modules to the site_perl
directory.  If neither, it automatically sets up local::lib compatible
installation path in a \f(CW\*(C`perl5\*(C'\fR directory under your home
directory. To avoid this, run the script as the root user, with
\&\f(CW\*(C`\-\-sudo\*(C'\fR option or with \f(CW\*(C`\-\-local\-lib\*(C'\fR option.
.SS "cpanminus can't install the module \s-1XYZ.\s0 Is it a bug?"
.IX Subsection "cpanminus can't install the module XYZ. Is it a bug?"
It is more likely a problem with the distribution itself. cpanminus
doesn't support or is known to have issues with distributions like as
follows:
.IP "\(bu" 4
Tests that require input from \s-1STDIN.\s0
.IP "\(bu" 4
Tests that might fail when \f(CW\*(C`AUTOMATED_TESTING\*(C'\fR is enabled.
.IP "\(bu" 4
Modules that have invalid numeric values as \s-1VERSION\s0 (such as \f(CW\*(C`1.1a\*(C'\fR)
.PP
These failures can be reported back to the author of the module so
that they can fix it accordingly, rather than me.
.SS "Does cpanm support the feature \s-1XYZ\s0 of \s-1CPAN\s0 and \s-1CPANPLUS\s0?"
.IX Subsection "Does cpanm support the feature XYZ of CPAN and CPANPLUS?"
Most likely not. Here are the things that cpanm doesn't do by
itself. And it's a feature \- you got that from the name \fIminus\fR,
right?
.PP
If you need these features, use \s-1CPAN\s0, \s-1CPANPLUS\s0 or the standalone
tools that are mentioned.
.IP "\(bu" 4
Bundle:: module dependencies
.IP "\(bu" 4
\&\s-1CPAN\s0 testers reporting
.IP "\(bu" 4
Building \s-1RPM\s0 packages from \s-1CPAN\s0 modules
.IP "\(bu" 4
Listing the outdated modules that needs upgrading. See App::cpanoutdated
.IP "\(bu" 4
Uninstalling modules. See pm-uninstall.
.IP "\(bu" 4
Showing the changes of the modules you're about to upgrade. See cpan-listchanges
.IP "\(bu" 4
Patching \s-1CPAN\s0 modules with distroprefs.
.PP
See cpanm or \f(CW\*(C`cpanm \-h\*(C'\fR to see what cpanminus \fIcan\fR do :)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010\- Tatsuhiko Miyagawa
.PP
The standalone executable contains the following modules embedded.
.IP "CPAN::DistnameInfo Copyright 2003 Graham Barr" 4
.IX Item "CPAN::DistnameInfo Copyright 2003 Graham Barr"
.PD 0
.IP "Parse::CPAN::Meta Copyright 2006\-2009 Adam Kennedy" 4
.IX Item "Parse::CPAN::Meta Copyright 2006-2009 Adam Kennedy"
.IP "local::lib Copyright 2007\-2009 Matt S Trout" 4
.IX Item "local::lib Copyright 2007-2009 Matt S Trout"
.IP "HTTP::Tiny Copyright 2011 Christian Hansen" 4
.IX Item "HTTP::Tiny Copyright 2011 Christian Hansen"
.IP "Module::Metadata Copyright 2001\-2006 Ken Williams. 2010 Matt S Trout" 4
.IX Item "Module::Metadata Copyright 2001-2006 Ken Williams. 2010 Matt S Trout"
.IP "version Copyright 2004\-2010 John Peacock" 4
.IX Item "version Copyright 2004-2010 John Peacock"
.IP "\s-1JSON::PP\s0 Copyright 2007−2011 by Makamaka Hannyaharamitu" 4
.IX Item "JSON::PP Copyright 2007−2011 by Makamaka Hannyaharamitu"
.IP "CPAN::Meta Copyright (c) 2010 by David Golden and Ricardo Signes" 4
.IX Item "CPAN::Meta Copyright (c) 2010 by David Golden and Ricardo Signes"
.IP "Try::Tiny Copyright (c) 2009 Yuval Kogman" 4
.IX Item "Try::Tiny Copyright (c) 2009 Yuval Kogman"
.IP "parent Copyright (c) 2007\-10 Max Maischein" 4
.IX Item "parent Copyright (c) 2007-10 Max Maischein"
.IP "Version::Requirements copyright (c) 2010 by Ricardo Signes" 4
.IX Item "Version::Requirements copyright (c) 2010 by Ricardo Signes"
.IP "CPAN::Meta::YAML copyright (c) 2010 by Adam Kennedy" 4
.IX Item "CPAN::Meta::YAML copyright (c) 2010 by Adam Kennedy"
.PD
.SH "LICENSE"
.IX Header "LICENSE"
Same as Perl.
.SH "CREDITS"
.IX Header "CREDITS"
.SS "\s-1CONTRIBUTORS\s0"
.IX Subsection "CONTRIBUTORS"
Patches and code improvements were contributed by:
.PP
Goro Fuji, Kazuhiro Osawa, Tokuhiro Matsuno, Kenichi Ishigaki, Ian
Wells, Pedro Melo, Masayoshi Sekimura, Matt S Trout (mst), squeeky,
horus and Ingy dot Net.
.SS "\s-1ACKNOWLEDGEMENTS\s0"
.IX Subsection "ACKNOWLEDGEMENTS"
Bug reports, suggestions and feedbacks were sent by, or general
acknowledgement goes to:
.PP
Jesse Vincent, David Golden, Andreas Koenig, Jos Boumans, Chris
Williams, Adam Kennedy, Audrey Tang, J. Shirley, Chris Prather, Jesse
Luehrs, Marcus Ramberg, Shawn M Moore, chocolateboy, Chirs Nehren,
Jonathan Rockway, Leon Brocard, Simon Elliott, Ricardo Signes, AEvar
Arnfjord Bjarmason, Eric Wilhelm, Florian Ragwitz and xaicron.
.SH "COMMUNITY"
.IX Header "COMMUNITY"
.IP "<http://github.com/miyagawa/cpanminus> \- source code repository, issue tracker" 4
.IX Item "<http://github.com/miyagawa/cpanminus> - source code repository, issue tracker"
.PD 0
.IP "<irc://irc.perl.org/#toolchain> \- discussions about Perl toolchain. I'm there." 4
.IX Item "<irc://irc.perl.org/#toolchain> - discussions about Perl toolchain. I'm there."
.PD
.SH "NO WARRANTY"
.IX Header "NO WARRANTY"
This software is provided \*(L"as-is,\*(R" without any express or implied
warranty. In no event shall the author be held liable for any damages
arising from the use of the software.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1CPAN\s0 \s-1CPANPLUS\s0 pip
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 229:" 4
.IX Item "Around line 229:"
Non-ASCII character seen before =encoding in '2007−2011'. Assuming \s-1UTF\-8\s0
