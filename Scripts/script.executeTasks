#!/bin/bash

#Author: Stefanos Georgiou from Athens University of Business and Economics
#This work is done for the purpose of comparing power consumption of different languages

#This script file receives as a command-line parameter a file (that has a number of tasks which is an output of compileTasks and shows the successfully compiled files) and executes the languages given to it (again as command-line arguments)

#Command Line Arguments
#$1 -> full path of the file where all the tasks (tasks paths) that successfully compiled are located

if [ "$#" -eq 0 ];
then
	echo ""
	echo "Illegal number of command line arguments!"
	echo "Use --help for more information."
	echo ""
	exit
fi

if [ "$1" == "--help" ];
then
	echo ""
	echo "\$1 -> Full path of the file where all the tasks are located."
	echo "\$2 -> The sleep time between tasks execution in different programming languages,"
	echo "      e.g., 1s for one second 2m for two minutes 3h for three hours."
	echo "      This parameter acts as a safe guard to reduce noise among the executions."
	echo ""
	exit
fi


#At this point we have a file that includes all the Tasks we successfully compiled
for containesTasks in `ls $1`;
do
	
	#Create RunTimePerformance log file
	TimeStamp=$(date -u | sed -e 's/ /_/g')	
	runTimePerformance="RunTimePerformance_"$containesTasks"_"$TimeStamp".txt"

        #For all the programming languages enter and compile the content
        for containesLanguages in `ls $1/$containesTasks`;
        do
                #For all the tasks compile them based on the language
		for tasksImplementation in `ls $1/$containesTasks/$containesLanguages`;
                do
			
			case "$containesLanguages" in
				("c") 
					if [[ $tasksImplementation != *".c" ]];
					then
						echo "Executing C"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						executable=$1/$containesTasks/$containesLanguages/$tasksImplementation
						(time ./$executable) 2>> ../Reports/$runTimePerformance
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:C" >> ../Reports/Failed_Execution_Report.txt
						fi
						sleep $2
					fi
				
				;;
				("c++")
					if [[ $tasksImplementation != *".cpp" ]];
					then
						echo "Executing C++"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						executable=$1/$containesTasks/$containesLanguages/$tasksImplementation
						(time ./$executable) 2>> ../Reports/$runTimePerformance
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:C++" >> ../Reports/Failed_Execution_Report.txt
						fi
						sleep $2
					fi
				;;
				("java")
					if [[ $tasksImplementation != *".java" ]];
					then
						echo "Executing Java"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						path=$1/$containesTasks/$containesLanguages/
						executable=$(echo "$1/$containesTasks/$containesLanguages/$tasksImplementation" | awk -F "/" '{print $NF}' | awk -F "." '{print $1}') 
						(time java -classpath $path $executable) 2>> ../Reports/$runTimePerformance
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:Java" >> ../Reports/Failed_Execution_Report.txt
						fi
						sleep $2
					fi
				;;
				("python")
						echo "Executing Python"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						(time python $1/$containesTasks/$containesLanguages/$tasksImplementation) 2>> ../Reports/$runTimePerformance
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:Python" >> ../Reports/Failed_Execution_Report.txt
						fi
						sleep $2
				;;
				("c-sharp")
					if [[ $tasksImplementation == *".exe" ]]; 
					then
						echo "Executing C#"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						(time mono $1/$containesTasks/$containesLanguages/$tasksImplementation) 2>> ../Reports/$runTimePerformance
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:C-Sharp" >> ../Reports/Failed_Execution_Report.txt
						fi
						sleep $2
					fi
				;;
				("visual-basic-.net")
					if [[ $tasksImplementation == *".exe" ]];
					then
						echo "Executing VB.NET"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						(time mono $1/$containesTasks/$containesLanguages/$tasksImplementation) 2>> ../Reports/$runTimePerformance
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:Visual-Basic-.Net" >> ../Reports/Failed_Execution_Report.txt
						fi
						sleep $2
					fi
				;;

				("javascript")
						echo "Executing JavaScript"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						(time node -max_old_space_size=4096 $1/$containesTasks/$containesLanguages/$tasksImplementation) 2>> ../Reports/$runTimePerformance
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:JavaScript" >> ../Reports/Failed_Execution_Report.txt
						fi
						sleep $2
				;;
				("php")
						echo "Executing Php"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						(time php $1/$containesTasks/$containesLanguages/$tasksImplementation) 2>> ../Reports/$runTimePerformance
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:PHP" >> ../Reports/Failed_Execution_Report.txt
						fi
						sleep $2
				;;
				("perl")
						echo "Executing Perl"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						(time perl $1/$containesTasks/$containesLanguages/$tasksImplementation) 2>> ../Reports/$runTimePerformance
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution			$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:Perl" >> ../Reports/Failed_Execution_Report.txt
						fi
						sleep $2
				;;
				("ruby")
						echo "Executing Ruby" 
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						(time ruby $1/$containesTasks/$containesLanguages/$tasksImplementation) 2>> ../Reports/$runTimePerformance
					if [ $? -eq 0 ];
					then
						timeStamp=$(date -u)
						echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:Ruby" >> ../Reports/Failed_Execution_Report.txt
					fi
					sleep $2
				;;
				("r")
						echo "Executing R"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						(time Rscript $1/$containesTasks/$containesLanguages/$tasksImplementation) 2>> ../Reports/$runTimePerformance
                                                if [ $? -eq 0 ];
                                                then
                                                        timeStamp=$(date -u)
                                                        echo "Execution         	$timeStamp      $1/$containesTasks/$containesLanguages/$tasksImplementation:R" >> ../Reports/Failed_Execution_Report.txt
                                                fi
					sleep $2
				;;
				("go")
						echo "Executing Go"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						(time go run $1/$containesTasks/$containesLanguages/$tasksImplementation) 2>> ../Reports/$runTimePerformance
                                                if [ $? -eq 0 ];
                                                then
                                                        timeStamp=$(date -u)
                                                        echo "Execution         $timeStamp      $1/$containesTasks/$containesLanguages/$tasksImplementation:Go" >> ../Reports/Failed_Execution_Report.txt
                                                fi
					sleep $2
				;;
				("rust")		
					if [[ $tasksImplementation != *".rust" ]]; 
					then
						echo "Executing Rust"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						(time ./$1/$containesTasks/$containesLanguages/$tasksImplementation) 2>> ../Reports/$runTimePerformance
                                                if [ $? -eq 0 ];
                                                then
                                                        timeStamp=$(date -u)
                                                        echo "Execution         $timeStamp      $1/$containesTasks/$containesLanguages/$tasksImplementation:Rust" >> ../Reports/Failed_Execution_Report.txt
                                                fi
					sleep $2
					fi
				;;
				("swift")		
						echo "Executing Swift"
						echo "========================================================" >> ../Reports/$runTimePerformance
						echo "Programming Language: $containesLanguages" >> ../Reports/$runTimePerformance
						(time swift $1/$containesTasks/$containesLanguages/$tasksImplementation) 2>> ../Reports/$runTimePerformance
                                                if [ $? -eq 0 ];
                                                then
                                                        timeStamp=$(date -u)
                                                        echo "Execution         $timeStamp      $1/$containesTasks/$containesLanguages/$tasksImplementation:Swift" >> ../Reports/Failed_Execution_Report.txt
                                                fi
					sleep $2
				;;
			esac
		done
	done
done

exit
