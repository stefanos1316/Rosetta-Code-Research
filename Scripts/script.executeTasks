#!/bin/bash

#Author: Stefanos Georgiou from Athens University of Business and Economics
#This work is done for the purpose of comparing power consumption of different languages

#This script file receives as a command-line parameter a file (that has a number of tasks which is an output of compileTasks and shows the successfully compiled files) and executes the languages given to it (again as command-line arguments)

#Command Line Arguments
#$1 -> full path of the file where all the tasks (tasks paths) that successfully compiled are located

#At this point we have a file that includes all the Tasks we successfully compiled
for containesTasks in `ls $1`;
do
        #For all the programming languages enter and compile the content
        for containesLanguages in `ls $1/$containesTasks`;
        do
                #For all the tasks compile them based on the language
		for tasksImplementation in `ls $1/$containesTasks/$containesLanguages`;
                do
			
			case "$containesLanguages" in
				("c") 
					if [[ $tasksImplementation != *".c" ]];
					then
						echo "Executing C"
						executable=$1/$containesTasks/$containesLanguages/$tasksImplementation
						eval=$(./$executable)
						echo "Done with C"
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:C" >> ../Reports/Java_Failed_Report.txt
						fi
						sleep $2
					fi
					
				;;
				("c++")
					if [[ $tasksImplementation != *".cpp" ]];
					then
						echo "Executing C++"
						executable=$1/$containesTasks/$containesLanguages/$tasksImplementation
						eval=$(./$executable)
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:C++" >> ../Reports/Java_Failed_Report.txt
						fi
						sleep $2
					fi
				;;
				("java")
					if [[ $tasksImplementation != *".java" ]];
					then
						echo "Executing Java"
						path=$1/$containesTasks/$containesLanguages/
						executable=$(echo "$1/$containesTasks/$containesLanguages/$tasksImplementation" | awk -F "/" '{print $NF}' | awk -F "." '{print $1}') 
						eval=$(java -classpath $path $executable)
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:Java" >> ../Reports/Java_Failed_Report.txt
						fi
						sleep $2
					fi
				;;
				("python")
						echo "Executing Python"
						eval=$(python $1/$containesTasks/$containesLanguages/$tasksImplementation)
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:Python" >> ../Reports/Java_Failed_Report.txt
						fi
						sleep $2
				;;
				("c-sharp")
					if [[ $tasksImplementation == *".exe" ]]; 
					then
						echo "Executing C#"
						eval=$(mono $1/$containesTasks/$containesLanguages/$tasksImplementation)
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:C-Sharp" >> ../Reports/Java_Failed_Report.txt
						fi
						sleep $2
					fi
				;;
				("visual-basic-.net")
					if [[ $tasksImplementation == *".exe" ]];
					then
						echo "Executing VB.NET"
						eval=$(mono $1/$containesTasks/$containesLanguages/$tasksImplementation)
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:Visual-Basic-.Net" >> ../Reports/Java_Failed_Report.txt
						fi
						sleep $2
					fi
				;;

				("javascript")
						echo "Executing JavaScript"
						eval=$(node -max_old_space_size=4096 $1/$containesTasks/$containesLanguages/$tasksImplementation)
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:JavaScript" >> ../Reports/Java_Failed_Report.txt
						fi
						sleep $2
				;;
				("php")
						echo "Executing Php"
						eval=$(php $1/$containesTasks/$containesLanguages/$tasksImplementation)
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:PHP" >> ../Reports/Java_Failed_Report.txt
						fi
						sleep $2
				;;
				("perl")
						echo "Executing Perl"
						eval=$(perl $1/$containesTasks/$containesLanguages/$tasksImplementation)
						if [ $? -eq 0 ];
						then
							timeStamp=$(date -u)
							echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:Perl" >> ../Reports/Java_Failed_Report.txt
						fi
						sleep $2
				;;
				("ruby")
					echo "Executing Ruby"
					eval=$(ruby $1/$containesTasks/$containesLanguages/$tasksImplementation)
					if [ $? -eq 0 ];
					then
						timeStamp=$(date -u)
						echo "Execution		$timeStamp	$1/$containesTasks/$containesLanguages/$tasksImplementation:Ruby" >> ../Reports/Java_Failed_Report.txt
					fi
					sleep $2
				;;
				("r")
					echo "Executing R"
					eval=$(Rscript $1/$containesTasks/$containesLanguages/$tasksImplementation)
                                                if [ $? -eq 0 ];
                                                then
                                                        timeStamp=$(date -u)
                                                        echo "Execution         $timeStamp      $1/$containesTasks/$containesLanguages/$tasksImplementation:R" >> ../Reports/Java_Failed_Report.txt
                                                fi
					sleep $2
				;;
				("go")
					echo "Executing Go"
					 eval=$(go run $1/$containesTasks/$containesLanguages/$tasksImplementation)
                                                if [ $? -eq 0 ];
                                                then
                                                        timeStamp=$(date -u)
                                                        echo "Execution         $timeStamp      $1/$containesTasks/$containesLanguages/$tasksImplementation:Perl" >> ../Reports/Java_Failed_Report.txt
                                                fi
					sleep $2
				;;
				("rust")		
					if [[ $tasksImplementation != *".rust" ]]; 
					then
						echo "Executing Rust"
						eval=$(./$1/$containesTasks/$containesLanguages/$tasksImplementation)
                                                if [ $? -eq 0 ];
                                                then
                                                        timeStamp=$(date -u)
                                                        echo "Execution         $timeStamp      $1/$containesTasks/$containesLanguages/$tasksImplementation:Perl" >> ../Reports/Java_Failed_Report.txt
                                                fi
					sleep $2
					fi
				;;
			esac
		done
	done
done

exit
