@inproceedings{energy_monitoring_ref_1_Runtime_monitoring_hotspots,
	title = {Runtime monitoring of software energy hotspots},
	doi = {10.1145/2351676.2351699},
	booktitle = {2012 {Proceedings} of the 27th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering} ({ASE})},
	author = {Noureddine, A. and Bourdon, A. and Rouvoy, R. and Seinturier, L.},
	month = sep,
	year = {2012},
	pages = {160--169}
}


@inproceedings{energy_OS-level_ref_1_Self-Tuning_DVFS,
	title = {Self-{Tuning} {Batching} with {DVFS} for {Improving} {Performance} and {Energy} {Efficiency} in {Servers}},
	doi = {10.1109/MASCOTS.2013.12},
	month = aug,
	year = {2013},
	pages = {40--49}
}

@inproceedings{energy_code_ref_1_Source_Code_transformations,
	title = {Energy-optimizing source code transformations for {OS}-driven embedded software},
	doi = {10.1109/ICVD.2004.1260934},
	booktitle = {17th {International} {Conference} on {VLSI} {Design}, 2004. {Proceedings}},
	author = {Fei, Yunsi and Ravi, S. and Raghunathan, A. and Jha, N.K.},
	year = {2004},
	pages = {261--266}
}


@inproceedings{energy_code_ref_2_Algorithm_Analysis_Energy_Consumption,
	title = {Energy {Consumption} {Analysis} of {Algorithms} {Implementations}},
	doi = {10.1109/ESEM.2015.7321198},
	booktitle = {2015 {ACM}/{IEEE} {International} {Symposium} on {Empirical} {Software} {Engineering} and {Measurement} ({ESEM})},
	author = {Rashid, M. and Ardito, L. and Torchiano, M.},
	month = oct,
	year = {2015},
	pages = {1--4}
}


@inproceedings{energy_code_ref_3_Speculative_Analysis,
	address = {New York, NY, USA},
	series = {{FoSER} '10},
	title = {Speculative {Analysis}: {Exploring} {Future} {Development} {States} of {Software}},
	isbn = {978-1-4503-0427-6},
	shorttitle = {Speculative {Analysis}},
	booktitle = {Proceedings of the {FSE}/{SDP} {Workshop} on {Future} of {Software} {Engineering} {Research}},
	publisher = {ACM},
	author = {Brun, Yuriy and Holmes, Reid and Ernst, Michael D. and Notkin, David},
	year = {2010},
	keywords = {developer awareness, ide, quick fix, recommender system, speculation, version control},
	pages = {59--64}
}

@inproceedings{autonomous_underwater_vehicle,
	title = {Development of a simple navigation system for the {Autosub} autonomous underwater vehicle},
	doi = {10.1109/OCEANS.1993.326148},
	booktitle = {{OCEANS} '93. {Engineering} in {Harmony} with {Ocean}. {Proceedings}},
	author = {McPhail, S.},
	month = oct,
	year = {1993},
	pages = {II504--II509 vol.2}
}


@inproceedings{jelschen_towards_2012,
	title = {Towards {Applying} {Reengineering} {Services} to {Energy}-{Efficient} {Applications}},
	doi = {10.1109/CSMR.2012.43},
	booktitle = {2012 16th {European} {Conference} on {Software} {Maintenance} and {Reengineering} ({CSMR})},
	author = {Jelschen, J. and Gottschalk, M. and Josefiok, M. and Pitu, C. and Winter, A.},
	month = mar,
	year = {2012},
	pages = {353--358}
}

@inproceedings{ethernet_packet_processing,
	title = {Power analysis of embedded operating systems},
	doi = {10.1109/DAC.2000.855327},
	booktitle = {Design {Automation} {Conference}, 2000. {Proceedings} 2000},
	author = {Dick, R.P. and Lakshminarayana, G. and Raghunathan, A. and Jha, N.K.},
	year = {2000},
	pages = {312--315}
}

@inproceedings{binkley_source_2007,
	title = {Source {Code} {Analysis}: {A} {Road} {Map}},
	shorttitle = {Source {Code} {Analysis}},
	doi = {10.1109/FOSE.2007.27},
	author = {Binkley, D.},
	month = may,
	year = {2007},
	pages = {104--119}
}

@book{Fowler_refactoring:_1999,
	address = {Boston, MA, USA},
	title = {Refactoring: {Improving} the {Design} of {Existing} {Code}},
	isbn = {0-201-48567-2},
	shorttitle = {Refactoring},
	author = {Fowler, M. and Beck, K. and Brant, J. and Opdyke, W. and Roberts, D.},
	publisher = {Addison-Wesley Longman Publishing Co., Inc.},
	year = {1999}
}

@inproceedings{prahofer_opportunities_2012,
	title = {Opportunities and challenges of static code analysis of {IEC} 61131-3 programs},
	doi = {10.1109/ETFA.2012.6489535},
	booktitle = {2012 {IEEE} 17th {Conference} on {Emerging} {Technologies} {Factory} {Automation} ({ETFA})},
	author = {Prahofer, H. and Angerer, F. and Ramler, R. and Lacheiner, H. and Grillenberger, F.},
	month = sep,
	year = {2012},
	keywords = {C\#, C/C++, control engineering computing, IEC 61131-3 program, Java, knowledge based systems, PLC programming, program diagnostics, programmable controllers, programming language, rule-based analysis, Software quality, source code, static code analysis},
	pages = {1--8}
}

@inproceedings{cheng_self-tuning_2013,
	title = {Self-{Tuning} {Batching} with {DVFS} for {Improving} {Performance} and {Energy} {Efficiency} in {Servers}},
	doi = {10.1109/MASCOTS.2013.12},
	booktitle = {2013 {IEEE} 21st {International} {Symposium} on {Modeling}, {Analysis} {Simulation} of {Computer} and {Telecommunication} {Systems} ({MASCOTS})},
	author = {Cheng, Dazhao and Guo, Yanfei and Zhou, Xiaobo},
	month = aug,
	year = {2013},
	keywords = {Adaptation models, batching control, Control systems, CPU, data center servers, DVFS, Frequency control, front-tier Web server, fuzzy control, Internet, Internet services, power control, predictive control, self-adjusting systems, self-tuning fuzzy model predictive control approach, self-tuning request batching mechanism, Servers, service level agreement, telecommunication control, Time factors, two-layer control system},
	pages = {40--49}
}

@inproceedings{kambadur_experimental_2014,
	address = {New York, NY, USA},
	series = {{OOPSLA} '14},
	title = {An {Experimental} {Survey} of {Energy} {Management} {Across} the {Stack}},
	isbn = {978-1-4503-2585-1},
	booktitle = {Proceedings of the 2014 {ACM} {International} {Conference} on {Object} {Oriented} {Programming} {Systems} {Languages} \& {Applications}},
	publisher = {ACM},
	author = {Kambadur, Melanie and Kim, Martha A.},
	year = {2014},
	keywords = {compilers, energy, frequency governors, idle states, measurement study, parallelism, power},
	pages = {329--344}
}

@inproceedings{scanniello_gpgpu_2013,
	title = {Using the {GPU} to {Green} an {Intensive} and {Massive} {Computation} {System}},
	doi = {10.1109/CSMR.2013.55}
	author = {Scanniello, G. and Erra, U. and Caggianese, G. and Gravino, C.},
	month = mar,
	year = {2013},
	pages = {384--387}
}

@inproceedings{misailovic_chisel:_2014,
	address = {New York, NY, USA},
	series = {{OOPSLA} '14},
	title = {Chisel: {Reliability}- and {Accuracy}-aware {Optimization} of {Approximate} {Computational} {Kernels}},
	isbn = {978-1-4503-2585-1},
	shorttitle = {Chisel},
	booktitle = {Proceedings of the 2014 {ACM} {International} {Conference} on {Object} {Oriented} {Programming} {Systems} {Languages} \& {Applications}},
	publisher = {ACM},
	author = {Misailovic, Sasa and Carbin, Michael and Achour, Sara and Qi, Zichao and Rinard, Martin C.},
	year = {2014},
	keywords = {approximate, computing},
	pages = {309--328}
}

@inproceedings{ribic_energy-efficient_work-stealing_2014,
	address = {New York, NY, USA},
	series = {{ASPLOS} '14},
	title = {Energy-efficient {Work}-stealing {Language} {Runtimes}},
	isbn = {978-1-4503-2305-5},
	booktitle = {Proceedings of the 19th {International} {Conference} on {Architectural} {Support} for {Programming} {Languages} and {Operating} {Systems}},
	publisher = {ACM},
	author = {Ribic, Haris and Liu, Yu David},
	year = {2014},
	keywords = {DVFS, Energy efficiency, language runtimes, thread management, work stealing},
	pages = {513--528},
}

@inproceedings{bartenstein_green_streams_2013,
	address = {Piscataway, NJ, USA},
	series = {{ICSE} '13},
	title = {Green {Streams} for {Data}-intensive {Software}},
	isbn = {978-1-4673-3076-3},
	booktitle = {Proceedings of the 2013 {International} {Conference} on {Software} {Engineering}},
	publisher = {IEEE Press},
	author = {Bartenstein, Thomas W. and Liu, Yu David},
	year = {2013},
	pages = {532--541},
}

@book{webb_smart_2008,
	title = {{SMART} 2020: enabling the low carbon economy in the information age, a report by {The} {Climate} {Group} on behalf of the {Global} {eSustainability} {Initiative} ({GeSI})},
	shorttitle = {{SMART} 2020},
	abstract = {http://www.smart2020.org/},
	author = {Webb, Molly},
	year = {2008},
	keywords = {2007june, carbon-neutral, ec},
	file = {Webb - 2008 - SMART 2020 enabling the low carbon economy in the.pdf:files/633/Webb - 2008 - SMART 2020 enabling the low carbon economy in the.pdf:application/pdf},
	note = "[Online]. Available: \url{http://gesi.org/smarter2020}. [Accessed: 2016-07-12]"
}

@article{ICT_energy_impact_1,
	title = {The {Impact} of {Information} {Technology} on {Energy} {Consumption} and {Carbon} {Emissions}},
	volume = {2015},
	issn = {1530-2180},
	doi = {10.1145/2755977},
	abstract = {In this article the authors evaluate the impact of different sectors of information and communication technologies (ICT) on energy consumption and CO2 emissions. ICT is understood to cover computer and peripheral equipment including local area networks, telecommunication equipment and networks, and data centers.},
	journal = {Ubiquity},
	author = {Gelenbe, Erol and Caseau, Yves},
	month = jun,
	year = {2015},
	pages = {1:1--1:15},
}

@article{ICT_energy_impact_2,
	series = {Green {Networking}},
	title = {Trends in worldwide {ICT} electricity consumption from 2007 to 2012},
	volume = {50},
	issn = {0140-3664},
	doi = {10.1016/j.comcom.2014.02.008},
	journal = {Computer Communications},
	author = {Van Heddeghem, Ward and Lambert, Sofie and Lannoo, Bart and Colle, Didier and Pickavet, Mario and Demeester, Piet},
	month = sep,
	year = {2014},
	keywords = {electricity consumption, Energy-efficiency, Footprint, Green ICT, power consumption},
	pages = {64--76},
}

@inproceedings{ICT_energy_impact_3,
	title = {Energy consumption of {ICT} infrastructures: {An} operator's viewpoint},
	shorttitle = {Energy consumption of {ICT} infrastructures},
	booktitle = {2012 38th {European} {Conference} and {Exhibition} on {Optical} {Communications}},
	author = {Gosselin, S. and Saliou, F. and Bourgart, F. and Rouzic, E. Le and Masson, S. Le and Gati, A.},
	month = sep,
	year = {2012},
	keywords = {architectural evolutions, digital revolution, energy action plan, Energy consumption, energy-hungry infrastructures, France Telecom Orange, ICT infrastructures, Optical buffering, Optical network units, Optical receivers, Optical transmitters, Passive optical networks, Ports (Computers), technological evolutions, telecommunication power supplies},
	pages = {1--3}
}

@inproceedings{ICT_energy_impact_4,
	title = {{ICT} {Solutions} {Calculation} {Model} for {CO}2 {Emission} {Reduction} and {Prediction} on {Its} {Emission} {Reduction} {Potential}},
	doi = {10.1109/ICMSS.2009.5301630},
	booktitle = {International {Conference} on {Management} and {Service} {Science}, 2009. {MASS} '09},
	author = {Peng, R. and Wang, X.},
	month = sep,
	year = {2009},
	keywords = {air pollution control, Carbon dioxide, carbon dioxide emission reduction potential, Communication industry, Communications technology, Economic forecasting, emission reduction index, Energy consumption, energy efficiency, environmental science computing, GSM, ICT solution calculation model, information communication technology, Power generation economics, Predictive models, Production},
	pages = {1--5}
}

@inproceedings{ICT_energy_impact_5,
	title = {A global perspective on energy conservation in large data networks},
	doi = {10.1109/PATMOS.2014.6951906},
	booktitle = {2014 24th {International} {Workshop} on {Power} and {Timing} {Modeling}, {Optimization} and {Simulation} ({PATMOS})},
	author = {Durbeck, L. and Athanas, P.},
	month = sep,
	year = {2014},
	pages = {1--9}
}

@article{murugesan_green_IT,
	title = {Harnessing {Green} {IT}: {Principles} and {Practices}},
	volume = {10},
	issn = {1520-9202},
	shorttitle = {Harnessing {Green} {IT}},
	doi = {10.1109/MITP.2008.10},
	number = {1},
	journal = {IT Professional},
	author = {Murugesan, S.},
	month = jan,
	year = {2008},
	pages = {24--33}
}

@inproceedings{GREENS_Workshop,
	title = {{GREENS}},
	abstract = {International Workshop on Green and Sustainable Software (GREENS)},
	note = "[Online]. Available:  \url{http://greens.cs.vu.nl/}. [Accessed: 2016-07-12]."
}

@inproceedings{MeGSus_Workshop,
	title = {{ESEIW} 2016},
	note = "[Online]. Available: \url{http://alarcos.esi.uclm.es/eseiw2016/megsus/home}. [Accessed: 2016-07-12]."
}

@inproceedings{EASED_Workshop,
	title = {Energy {Aware} {Software}-{Engineering} and {Development} {\textbar} {EnviroInfo} 2016},
	abstract = {5th Workshop "Energy Aware Software-Engineering and Development" (EASED@EnviroInfo2016) Workshop Goals and Topics Software-Engineering aims at developing and},
	note = "[Online]. Available: \url{http://enviroinfo2016.org/sessions/energy-aware-software-engineering-and-development/}. [Accessed: 2016-07-12]."
}

@inproceedings{ICT4S_Workshop,
	title = {{ICT} for {Sustainability}, {ICT}4S},
	note = "[Online]. Available: \url{http://ict4s.org/}. [Accessed: 2016-07-12]."
}

@article{Data_Centers_What_got_us_here_wont_get_us_there,
	title = {Data {Center} {Energy} {Demand}: {What} {Got} {Us} {Here} {Won}'t {Get} {Us} {There}},
	volume = {33},
	issn = {0740-7459},
	shorttitle = {Data {Center} {Energy} {Demand}},
	doi = {10.1109/MS.2016.53},
	number = {2},
	journal = {IEEE Software},
	author = {Bashroush, R. and Woods, E. and Noureddine, A.},
	month = mar,
	year = {2016},
	pages = {18--21}
}

@inproceedings{manotas_empirical__study_2016,
	address = {New York, NY, USA},
	series = {{ICSE} '16},
	title = {An {Empirical} {Study} of {Practitioners}' {Perspectives} on {Green} {Software} {Engineering}},
	isbn = {978-1-4503-3900-1},
	booktitle = {Proceedings of the 38th {International} {Conference} on {Software} {Engineering}},
	publisher = {ACM},
	author = {Manotas, Irene and Bird, Christian and Zhang, Rui and Shepherd, David and Jaspan, Ciera and Sadowski, Caitlin and Pollock, Lori and Clause, James},
	year = {2016},
	keywords = {Empirical study, green software engineering, survey},
	pages = {237--248}
}

@article{pang_what_programmers_know_about_software's_energy_consumption_2015,
	title = {What do programmers know about software energy consumption?},
	volume = {PP},
	issn = {0740-7459},
	number = {99},
	journal = {IEEE Software},
	author = {Pang, C. and Hindle, A. and Adams, B. and Hassan, A.},
	year = {2015},
	keywords = {Battery charge measurement, Energy consumption, Energy measurement, Mobile handsets, Power demand, Software, Software measurement},
	pages = {1--1}}

@inproceedings{hasan_energy_profile_for_java_collection_classes_2016,
	address = {New York, NY, USA},
	series = {{ICSE} '16},
	title = {Energy {Profiles} of {Java} {Collections} {Classes}},
	isbn = {978-1-4503-3900-1},
	booktitle = {Proceedings of the 38th {International} {Conference} on {Software} {Engineering}},
	publisher = {ACM},
	author = {Hasan, Samir and King, Zachary and Hafiz, Munawar and Sayagh, Mohammed and Adams, Bram and Hindle, Abram},
	year = {2016},
	keywords = {API, collections, energy profile, Java},
	pages = {225--236}
	}

@inproceedings{eder_energy_consumptions,
	title = {Energy transparency from hardware to software},
	doi = {10.1109/E3S.2013.6705855},
	booktitle = {2013 {Third} {Berkeley} {Symposium} on {Energy} {Efficient} {Electronic} {Systems} ({E}3S)},
	author = {Eder, K.},
	month = oct,
	year = {2013},
	pages = {1--2}
}

@misc{delforge_americas_2015,
	title = {America's Data Centers Consuming and Wasting Growing Amounts of Energy},
	journal = {NRDC},
	author = {Delforge, Pierre},
	note="[Online]. Available: \url{https://www.nrdc.org/resources/americas-data-centers-consuming-and-wasting-growing-amounts-energy}. [Accessed: 2016-06-29]."
}

@misc{thibodeau_data_2014,
	title = {Data centers are the new polluters},
	journal = {Computerworld},
	author = {Thibodeau, Patrick},
	note="[Online]. Available: \url{http://www.computerworld.com/article/2598562/data-center/data-centers-are-the-new-polluters.html}. [Accessed: 2016-09-20]".
}


@misc{running_average_power_limit,
	title = {Running Average Power Limit --- RAPL textbar 01.org},
	author = {Pandruvada, S.},
	year = {2014},
	note = "[Online]. Available: \url{https://01.org/blogs/tlcounts/2014/running-average-power-limit---rapl}. [Accessed: 2016-06-28]."
}

@incollection{liu_data-oriented_2015,
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Data-{Oriented} {Characterization} of {Application}-{Level} {Energy} {Optimization}},
	copyright = {©2015 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-662-46674-2 978-3-662-46675-9},
	language = {en},
	number = {9033},
	booktitle = {Fundamental {Approaches} to {Software} {Engineering}},
	publisher = {Springer Berlin Heidelberg},
	author = {Liu, Kenan and Pinto, Gustavo and Liu, Yu David},
	editor = {Egyed, Alexander and Schaefer, Ina},
	month = apr,
	year = {2015},
	note = {DOI: 10.1007/978-3-662-46675-9\_21},
	pages = {316--331}
}

@misc{linux_power_measurements_interfaces,
	title = {Linux support for Power Measurement Interfaces},
	year = {2013}
	note = "[Online]. Available: \url{http://web.eece.maine.edu/~vweaver/projects/rapl/rapl\_support.html}. [Accessed: 2016-06-13]."
}

@misc{rapl_power_meter,
	title = {RAPL Power Meter 01.org},
	year = {2014},
	note = "[Online]. Available: \url{https://01.org/rapl-power-meter}. [Accessed: 2016-04-15]."
}

@inproceedings{noureddine_runtime_2012,
	title = {Runtime monitoring of software energy hotspots},
	doi = {10.1145/2351676.2351699},
	booktitle = {2012 {Proceedings} of the 27th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering} ({ASE})},
	author = {Noureddine, A. and Bourdon, A. and Rouvoy, R. and Seinturier, L.},
	month = sep,
	year = {2012},
	pages = {160--169}
}

@inproceedings{noureddine_optimising_2015,
	title = {Optimising {Energy} {Consumption} of {Design} {Patterns}},
	volume = {2},
	doi = {10.1109/ICSE.2015.208},
	booktitle = {2015 {IEEE}/{ACM} 37th {IEEE} {International} {Conference} on {Software} {Engineering} ({ICSE})},
	author = {Noureddine, A. and Rajan, A.},
	month = may,
	year = {2015},
	pages = {623--626}
}

@misc{bourdon_PowerAPI,
	title = {{PowerAPI}: {A} {Software} {Library} to {Monitor} the {Energy} {Consumed} at the {Process}-{Level}},
	author = {Bourdon, A. and Noureddine, A. and Rouvoy, R. and Seinturier, L.},
	year = {2012}
	note = "[Online]. Available: \url{http://ercim-news.ercim.eu/en92/special/powerapi-a-software-library-to-monitor\-the-energy-consumed-at-the-process-level}.  [Accessed: 2016-06-13]."
}


@inproceedings{greenadvisor_2015,
	title = {{GreenAdvisor}: {A} tool for analyzing the impact of software evolution on energy consumption},
	shorttitle = {{GreenAdvisor}},
	booktitle = {2015 {IEEE} {International} {Conference} on {Software} {Maintenance} and {Evolution} ({ICSME})},
	author = {Aggarwal, K. and Hindle, A. and Stroulia, E.},
	month = sep,
	year = {2015},
	pages = {311--320}
}


@inproceedings{greenminer_2012,
	title = {Green mining: {Investigating} power consumption across versions},
	shorttitle = {Green mining},
	doi = {10.1109/ICSE.2012.6227094},
	booktitle = {2012 34th {International} {Conference} on {Software} {Engineering} ({ICSE})},
	author = {Hindle, A.},
	month = jun,
	year = {2012},
	pages = {1301--1304}
}



@inproceedings{chowdhury_greenoracle_2016,
	address = {New York, NY, USA},
	series = {{MSR} '16},
	title = {{GreenOracle}: {Estimating} {Software} {Energy} {Consumption} with {Energy} {Measurement} {Corpora}},
	isbn = {978-1-4503-4186-8},
	shorttitle = {{GreenOracle}},
	url = {http://doi.acm.org/10.1145/2901739.2901763},
	doi = {10.1145/2901739.2901763},
	abstract = {Software energy consumption is a relatively new concern for mobile application developers. Poor energy performance can harm adoption and sales of applications. Unfortunately for the developers, the measurement of software energy consumption is expensive in terms of hardware and difficult in terms of expertise. Many prior models of software energy consumption assume that developers can use hardware instrumentation and thus cannot evaluate software running within emulators or virtual machines. Some prior models require actual energy measurements from the previous versions of applications in order to model the energy consumption of later versions of the same application. In this paper, we take a big-data approach to software energy consumption and present a model that can estimate software energy consumption mostly within 10\% error (in joules) and does not require the developer to train on energy measurements of their own applications. This model leverages a big-data approach whereby a collection of prior applications' energy measurements allows us to train, transmit, and apply the model to estimate any foreign application's energy consumption for a test run. Our model is based on the dynamic traces of system calls and CPU utilization.},
	urldate = {2016-06-13},
	booktitle = {Proceedings of the 13th {International} {Conference} on {Mining} {Software} {Repositories}},
	publisher = {ACM},
	author = {Chowdhury, Shaiful Alam and Hindle, Abram},
	year = {2016},
	pages = {49--60},
	file = {Chowdhury and Hindle - 2016 - GreenOracle Estimating Software Energy Consumptio.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Chowdhury and Hindle - 2016 - GreenOracle Estimating Software Energy Consumptio.pdf:application/pdf}
}


@inproceedings{noureddine_preliminary_2012,
	title = {A {Preliminary} {Study} of the {Impact} of {Software} {Engineering} on {GreenIT}},
	author = {Noureddine, Adel and Bourdon, Aurélien and Rouvoy, Romain and Seinturier, Lionel},
	month = jun,
	year = {2012},
	pages = {21--27}
}


@article{capra_is_2012,
	title = {Is {Software} "{Green}"? {Application} {Development} {Environments} and {Energy} {Efficiency} in {Open} {Source} {Applications}},
	volume = {54},
	issn = {0950-5849},
	shorttitle = {Is {Software} "{Green}"?},
	journal = {Inf. Softw. Technol.},
	author = {Capra, Eugenio and Francalanci, Chiara and Slaughter, Sandra A.},
	month = jan,
	year = {2012},
	keywords = {green IT, Software development application environment, software energy efficiency},
	pages = {60--71}
}


@inproceedings{ferreira_seflab_2013,
	title = {Seflab: {A} lab for measuring software energy footprints},
	shorttitle = {Seflab},
	booktitle = {2013 2nd {International} {Workshop} on {Green} and {Sustainable} {Software} ({GREENS})},
	author = {Ferreira, M.A. and Hoekstra, E. and Merkus, B. and Visser, B. and Visser, J.},
	month = may,
	year = {2013},
	pages = {30--37}
}


@misc{joulemeter_info,
	title = {meter 1.2},
	year = {2012},
	journal = {Software Informer},
	note = "[Online]. Available: \url{http://joulemeter.software.informer.com/1.2/}. [Accessed: 2016-07-19]."
}


@inproceedings{green_tracker,
	address = {New York, NY, USA},
	series = {{CHI} {EA} '10},
	title = {Green {Tracker}: {A} {Tool} for {Estimating} the {Energy} {Consumption} of {Software}},
	isbn = {978-1-60558-930-5},
	shorttitle = {Green {Tracker}},
	doi = {10.1145/1753846.1753981},
	booktitle = {{CHI} '10 {Extended} {Abstracts} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {ACM},
	author = {Amsel, Nadine and Tomlinson, Bill},
	year = {2010},
	keywords = {green computing, green IT, Software, sustainability},
	pages = {3337--3342}
}


@inproceedings{dong_self-constructive_2011,
	address = {New York, NY, USA},
	series = {{MobiSys} '11},
	title = {Self-constructive {High}-rate {System} {Energy} {Modeling} for {Battery}-powered {Mobile} {Systems}},
	isbn = {978-1-4503-0643-0},
	doi = {10.1145/1999995.2000027},
	booktitle = {Proceedings of the 9th {International} {Conference} on {Mobile} {Systems}, {Applications}, and {Services}},
	publisher = {ACM},
	author = {Dong, Mian and Zhong, Lin},
	year = {2011},
	keywords = {energy modeling, low power, mobile systems},
	pages = {335--348}
}


@inproceedings{zhang_refactoring_2012,
	address = {New York, NY, USA},
	series = {{OOPSLA} '12},
	title = {Refactoring {Android} {Java} {Code} for {On}-demand {Computation} {Offloading}},
	isbn = {978-1-4503-1561-6},
	booktitle = {Proceedings of the {ACM} {International} {Conference} on {Object} {Oriented} {Programming} {Systems} {Languages} and {Applications}},
	publisher = {ACM},
	author = {Zhang, Ying and Huang, Gang and Liu, Xuanzhe and Zhang, Wei and Mei, Hong and Yang, Shunxiang},
	year = {2012},
	keywords = {android, bytecode refactoring, computation offloading, energy},
	pages = {233--248}
}


@article{chauhan_green_2013,
	title = {A {Green} {Software} {Development} {Life} {Cycle} for {Cloud} {Computing}},
	volume = {15},
	issn = {1520-9202},
	doi = {10.1109/MITP.2013.6},
	abstract = {Cloud computing's recent proliferation has received attention from green crusaders hoping to mitigate the carbon footprint of large datacenters and IT infrastructures, but what about the software? A new framework for a greener cloud focuses on energy-efficient software development.},
	number = {1},
	journal = {IT Professional},
	author = {Chauhan, N. S. and Saxena, A.},
	month = jan,
	year = {2013}
	pages = {28--34}
}


@misc{joulemeter_energy_measurement_and_optimization,
	title = {Joulemeter: {Computational} {Energy} {Measurement} and {Optimization}},
	author = {Jie, L.},
	year = {2010},
	shorttitle = {Joulemeter},
	abstract = {The public release of Joulemeter is deprecated. We apologize for any inconvenience.The Joulemeter project provides a modeling tool to measure the energy usage of virtual machines (VMs), servers, desktops, laptops, and even individual software applications running on a computer. The visibility provided by Joulemeter is being used to improve power provisioning costs for data centers, …},
	journal = {Microsoft Research},
	note="[Online]. Available: \url{https://www.microsoft.com/en-us/research/project/joulemeter-computational-energy-measurement-and-optimization/}. [Accessed: 2016-08-02]."
}


@misc{powertutor_monitor_Android_based_platforms,
	title = {PowerTutor},
	year = {2011},
	note="[Online]. Available: \url{http://ziyang.eecs.umich.edu/projects/powertutor/}. [Accessed: 2016-08-03]."
}


@inproceedings{zhang_accurate_2010,
	address = {New York, NY, USA},
	series = {{CODES}/{ISSS} '10},
	title = {Accurate {Online} {Power} {Estimation} and {Automatic} {Battery} {Behavior} {Based} {Power} {Model} {Generation} for {Smartphones}},
	isbn = {978-1-60558-905-3},
	doi = {10.1145/1878961.1878982},
	abstract = {This paper describes PowerBooter, an automated power model construction technique that uses built-in battery voltage sensors and knowledge of battery discharge behavior to monitor power consumption while explicitly controlling the power management and activity states of individual components. It requires no external measurement equipment. We also describe PowerTutor, a component power management and activity state introspection based tool that uses the model generated by PowerBooter for online power estimation. PowerBooter is intended to make it quick and easy for application developers and end users to generate power models for new smartphone variants, which each have different power consumption properties and therefore require different power models. PowerTutor is intended to ease the design and selection of power efficient software for embedded systems. Combined, PowerBooter and PowerTutor have the goal of opening power modeling and analysis for more smartphone variants and their users.},
	booktitle = {Proceedings of the {Eighth} {IEEE}/{ACM}/{IFIP} {International} {Conference} on {Hardware}/{Software} {Codesign} and {System} {Synthesis}},
	publisher = {ACM},
	author = {Zhang, Lide and Tiwana, Birjodh and Qian, Zhiyun and Wang, Zhaoguang and Dick, Robert P. and Mao, Zhuoqing Morley and Yang, Lei},
	year = {2010},
	keywords = {battery, mobile phones, power modeling},
	pages = {105--114}
}


@inproceedings{manotas_seeds:_2014,
	address = {New York, NY, USA},
	series = {{ICSE} 2014},
	title = {{SEEDS}: {A} {Software} {Engineer}'s {Energy}-optimization {Decision} {Support} {Framework}},
	isbn = {978-1-4503-2756-5},
	shorttitle = {{SEEDS}},
	booktitle = {Proceedings of the 36th {International} {Conference} on {Software} {Engineering}},
	publisher = {ACM},
	author = {Manotas, Irene and Pollock, Lori and Clause, James},
	year = {2014},
	keywords = {analysis framework, Energy usage, software optimization},
	pages = {503--514}
}


@inproceedings{sahin_initial_2012,
	title = {Initial explorations on design pattern energy usage},
	doi = {10.1109/GREENS.2012.6224257},
	abstract = {As the use of computers has grown, so too has concern about the amount of power they consume. Data centers, for example, are limited in scalability as they struggle with soaring energy costs from many large companies relying on fast, reliable, and round-the-clock computing services. On large-scale computing clusters, like data centers, even a small drop in power consumption can have large effects. Across computing contexts, reducing power consumed by computers has become a major focus. In this paper, we present a new approach for mapping software design to power consumption and present empirical results of the approach on different software implementations. In particular, we compare the power profiles of software using design patterns against software not using design patterns as a way to explore how high-level design decisions affect an application's energy usage. We show how mappings between software design and power consumption profiles can provide software designers and developers with useful information about the power behavior of the software they are developing. The goal is for software engineers to use this information in designing and developing more energy efficient solutions.},
	booktitle = {2012 {First} {International} {Workshop} on {Green} and {Sustainable} {Software} ({GREENS})},
	author = {Sahin, C. and Cayci, F. and Gutiérrez, I. L. M. and Clause, J. and Kiamilev, F. and Pollock, L. and Winbladh, K.},
	month = jun,
	year = {2012},
	keywords = {computer centres, Computers, Data centers, design pattern energy usage, Design patterns, Energy consumption, energy costs, Energy measurement, Energy use, high-level design decisions, large-scale computing clusters, Monitoring, power aware computing, power behavior, power consumption, Power demand, Power measurement, Production facilities, round-the-clock computing services, Software, software design, software design mapping, Software engineering},
	pages = {55--61}
}


@inproceedings{noureddine_optimising_2015,
	title = {Optimising {Energy} {Consumption} of {Design} {Patterns}},
	volume = {2},
	doi = {10.1109/ICSE.2015.208},
	abstract = {Software design patterns are widely used in software engineering to enhance productivity and maintainability.However, recent empirical studies revealed the high energy overhead in these patterns. Our vision is to automatically detect and transform design patterns during compilation for better energy efficiency without impacting existing coding practices. In this paper, we propose compiler transformations for two design patterns, Observer and Decorator, and perform an initial evaluation of their energy efficiency.},
	booktitle = {2015 {IEEE}/{ACM} 37th {IEEE} {International} {Conference} on {Software} {Engineering} ({ICSE})},
	author = {Noureddine, A. and Rajan, A.},
	month = may,
	year = {2015},
	keywords = {coding practices, compilation, compiler transformations, Computers, Energy consumption, energy consumption optimisation, energy efficiency, maintainability, Observers, Optimization, power aware computing, program compilers, Software, software design patterns, Software engineering, software maintenance, Transforms},
	pages = {623--626}
}


@inproceedings{rashid_energy_2015,
	title = {Energy {Consumption} {Analysis} of {Algorithms} {Implementations}},
	doi = {10.1109/ESEM.2015.7321198},
	abstract = {Context: Mobile Devices, typically battery driven, require new efforts to improve the energy efficiency of both hardware and software designs. Goal: The goal of this work is to analyze the energy efficiency of different sorting algorithms implementations. Method: We set up an experiment on an ARM based device, measuring the energy consumption of different sorting algorithms implemented in different programming languages. Result: The algorithms and languages exhibit significantly different energy consumption, the ARM assembly language implementation of counting sort is the greenest solution. Conclusion: We provide the basic information to select algorithms and identified the main factors affecting energy consumption.},
	booktitle = {2015 {ACM}/{IEEE} {International} {Symposium} on {Empirical} {Software} {Engineering} and {Measurement} ({ESEM})},
	author = {Rashid, M. and Ardito, L. and Torchiano, M.},
	month = oct,
	year = {2015},
	keywords = {Algorithm design and analysis, ARM assembly language, ARM based device, Energy consumption, energy consumption analysis, energy efficiency, hardware design, Java, mobile computing, mobile devices, Power demand, programming languages, Software algorithms, software design, sorting, sorting algorithms implementation},
	pages = {1--4}
}


@inproceedings{hasan_energy_2016,
	address = {New York, NY, USA},
	series = {{ICSE} '16},
	title = {Energy {Profiles} of {Java} {Collections} {Classes}},
	isbn = {978-1-4503-3900-1},
	booktitle = {Proceedings of the 38th {International} {Conference} on {Software} {Engineering}},
	publisher = {ACM},
	author = {Hasan, Samir and King, Zachary and Hafiz, Munawar and Sayagh, Mohammed and Adams, Bram and Hindle, Abram},
	year = {2016},
	keywords = {API, collections, energy profile, Java},
	pages = {225--236}
}

@inproceedings{bunse2013energy,
	title={On the energy consumption of design patterns},
	author={Bunse, Christian and Schwedenschanze, Zur and Stiemer, Sebastian},
	booktitle={Proceedings of the 2nd Workshop EASED@ BUIS Energy Aware Software-Engineering and Development},
	pages={7--8},
	year={2013},
	organization={Citeseer}
}


@book{gamma_design_1994,
	address = {Reading, Mass.},
	edition = {01 edition},
	title = {Design patterns : elements of reusable object-oriented software},
	isbn = {978-0-201-63361-0},
	shorttitle = {Design patterns},
	language = {English},
	publisher = {Addison Wesley},
	author = {Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John},
	month = oct,
	year = {1994}
}


@inproceedings{ribic_energy-efficient_2014,
	address = {New York, NY, USA},
	series = {{ASPLOS} '14},
	title = {Energy-efficient {Work}-stealing {Language} {Runtimes}},
	isbn = {978-1-4503-2305-5},
	doi = {10.1145/2541940.2541971},
	abstract = {Work stealing is a promising approach to constructing multithreaded program runtimes of parallel programming languages. This paper presents HERMES, an energy-efficient work-stealing language runtime. The key insight is that threads in a work-stealing environment -- thieves and victims - have varying impacts on the overall program running time, and a coordination of their execution "tempo" can lead to energy efficiency with minimal performance loss. The centerpiece of HERMES is two complementary algorithms to coordinate thread tempo: the workpath-sensitive algorithm determines tempo for each thread based on thief-victim relationships on the execution path, whereas the workload-sensitive algorithm selects appropriate tempo based on the size of work-stealing deques. We construct HERMES on top of Intel Cilk Plus's runtime, and implement tempo adjustment through standard Dynamic Voltage and Frequency Scaling (DVFS). Benchmarks running on HERMES demonstrate an average of 11-12\% energy savings with an average of 3-4\% performance loss through meter-based measurements over commercial CPUs.},
	booktitle = {Proceedings of the 19th {International} {Conference} on {Architectural} {Support} for {Programming} {Languages} and {Operating} {Systems}},
	publisher = {ACM},
	author = {Ribic, Haris and Liu, Yu David},
	year = {2014},
	keywords = {dvfs, energy efficiency, language runtimes, thread management, work stealing},
	pages = {513--528}
}


@inproceedings{pinto_understanding_2014,
	address = {New York, NY, USA},
	series = {{OOPSLA} '14},
	title = {Understanding {Energy} {Behaviors} of {Thread} {Management} {Constructs}},
	isbn = {978-1-4503-2585-1},
	doi = {10.1145/2660193.2660235},
	abstract = {Java programmers are faced with numerous choices in managing concurrent execution on multicore platforms. These choices often have different trade-offs (e.g., performance, scalability, and correctness guarantees). This paper analyzes an additional dimension, energy consumption. It presents an empirical study aiming to illuminate the relationship between the choices and settings of thread management constructs and energy consumption. We consider three important thread management constructs in concurrent programming: explicit thread creation, fixed-size thread pooling, and work stealing. We further shed light on the energy/performance trade-off of three ``tuning knobs'' of these constructs: the number of threads, the task division strategy, and the characteristics of processed data. Through an extensive experimental space exploration over real-world Java programs, we produce a list of findings about the energy behaviors of concurrent programs, which are not always obvious. The study serves as a first step toward improving energy efficiency of concurrent programs on parallel architectures.},
	booktitle = {Proceedings of the 2014 {ACM} {International} {Conference} on {Object} {Oriented} {Programming} {Systems} {Languages} \& {Applications}},
	publisher = {ACM},
	author = {Pinto, Gustavo and Castor, Fernando and Liu, Yu David},
	year = {2014},
	keywords = {Energy consumption, Java, multi-threaded programming, performance, thread management},
	pages = {345--360}
}


@inproceedings{cai_thread_2011,
	title = {Thread shuffling: {Combining} {DVFS} and thread migration to reduce energy consumptions for multi-core systems},
	shorttitle = {Thread shuffling},
	doi = {10.1109/ISLPED.2011.5993670},
	abstract = {In recent years, multi-core systems have become mainstream in computer industry. The design of multi-cores takes advantage of thread-level parallelism in emerging applications that are computationally intensive and highly parallel. Energy efficiency is one of the biggest challenges in the design of multi-core systems, and workload imbalance among parallel threads is one of sources of energy inefficiency. Many techniques based on dynamic voltage frequency scaling (DVFS) are proposed to save energy consumptions on multi-cores, but all of them assume that each core in a multi-core system contains only one hardware context and only one thread can execute on one core at a time. However, mainstream multi-core systems are moving to have simultaneous multithreading (SMT) support in cores, and existing DVFS-based techniques are not effective to achieve maximum energy savings. In this paper, we present a novel technique called thread shuffling, which combines thread migration and DVFS to achieve maximum energy savings and maintain performance on a multi-core system supporting SMT. Thread shuffling is implemented and simulated in a cycle-accurate ×86 multi-core system. The experiments show that it achieves up to 56\% energy savings without performance penalty for selected Recognition, Mining and Synthesis (RMS) applications from Intel Labs.},
	booktitle = {Low {Power} {Electronics} and {Design} ({ISLPED}) 2011 {International} {Symposium} on},
	author = {Cai, Q. and González, J. and Magklis, G. and Chaparro, P. and González, A.},
	month = aug,
	year = {2011},
	keywords = {Benchmark testing, Context, dvfs, DVFS based technique, dynamic voltage frequency scaling, Energy consumption, energy consumptions reduction, energy efficiency, Hardware, Instruction sets, integrated circuit design, Message systems, microcomputers, multi-core, Multicore processing, multi cores design, multiprocessing systems, multi-threading, multi threading support, power aware computing, Radiation detectors, SMT, thread level parallelism, thread migration, thread shuffling},
	pages = {379--384},
	file = {Cai et al. - 2011 - Thread shuffling Combining DVFS and thread migrat.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Cai et al. - 2011 - Thread shuffling Combining DVFS and thread migrat.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\FH3QJWRH\\articleDetails.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\W6QFE7PT\\Cai et al. - 2011 - Thread shuffling Combining DVFS and thread migrat.pdf:application/pdf}
}



@article{chen_convergence_2008,
	title = {Convergence of {Recognition}, {Mining}, and {Synthesis} {Workloads} and {Its} {Implications}},
	volume = {96},
	issn = {0018-9219},
	doi = {10.1109/JPROC.2008.917729},
	abstract = {This paper examines the growing need for a general-purpose ldquoanalytics enginerdquo that can enable next-generation processing platforms to effectively model events, objects, and concepts based on end-user input, and accessible datasets, along with an ability to iteratively refine the model in real-time. We find such processing needs at the heart of many emerging applications and services. This processing is further decomposed in terms of an integration of three fundamental compute capabilities-recognition, mining, and synthesis (RMS). The set of RMS workloads is examined next in terms of usage, mathematical models, numerical algorithms, and underlying data structures. Our analysis suggests a workload convergence that is analyzed next for its platform implications. In summary, a diverse set of emerging RMS applications from market segments like graphics, gaming, media-mining, unstructured information management, financial analytics, and interactive virtual communities presents a relatively focused, highly overlapping set of common platform challenges. A general-purpose processing platform designed to address these challenges has the potential for significantly enhancing users' experience and programmer productivity.},
	number = {5},
	journal = {Proceedings of the IEEE},
	author = {Chen, Y. K. and Chhugani, J. and Dubey, P. and Hughes, C. J. and Kim, D. and Kumar, S. and Lee, V. W. and Nguyen, A. D. and Smelyanskiy, M.},
	month = may,
	year = {2008},
	keywords = {Algorithms, Convergence, Data mining, data structures, emerging applications, financial analytics, gaming, general-purpose analytics engine, Graphics, Heart, Information analysis, Information management, interactive virtual communities, Mathematical model, mathematical models, media mining, numerical algorithms, parallel architectures, pattern recognition, Process design, Productivity, Programming profession, synthesis workloads, unstructured information management},
	pages = {790--807},
	file = {Chen et al. - 2008 - Convergence of Recognition, Mining, and Synthesis .pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Chen et al. - 2008 - Convergence of Recognition, Mining, and Synthesis .pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\M74KCR4R\\login.html:text/html}
}


@inproceedings{korthikanti_avoiding_2010,
	title = {Avoiding energy wastage in parallel applications},
	doi = {10.1109/GREENCOMP.2010.5598314},
	abstract = {We propose a methodology to analyze algorithms in order to reduce energy waste in executing applications. Our methodology is based on three observations. First, the relation between power and frequency of a single core is approximately cubic. Thus it may be possible to run an application slower on a core in order to save energy. In the case of a parallel architecture, one has to also factor the effect (on performance and energy consumption) of the interaction between cores. Second, multicore architectures which aggressively manage power consumption by allowing cores to be operated at reduced frequencies are being developed. This means that parallel applications on a multicore architecture can be executed using a variable number of cores running at different frequencies-affecting both the performance of the application and the energy required to execute it. Lastly, there is a certain benefit (positive utility) in running an application faster and a cost (negative utility) in terms of the energy consumed. Expending energy that does not contribute to the overall utility wastes the energy. The precise trade-off between performance and energy consumption depends on the structure of a parallel algorithm and the associated utilities. We describe a methodology to do this trade-off and illustrate it with several parallel algorithms.},
	booktitle = {Green {Computing} {Conference}, 2010 {International}},
	author = {Korthikanti, V. A. and Agha, G.},
	month = aug,
	year = {2010},
	keywords = {Algorithm design and analysis, Complexity theory, Computational modeling, energy, energy conservation, Energy consumption, energy wastage reduction, Frequency, multicore architecture, Multicore processing, multiprocessing systems, parallel algorithm, parallel algorithms, parallel application, parallel architecture, parallel architectures, performance, power aware computing, power consumption, power consumption managment, Time frequency analysis, Utitlity},
	pages = {149--163},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\MMVVAST6\\articleDetails.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\XGIZFE25\\Korthikanti and Agha - 2010 - Avoiding energy wastage in parallel applications.pdf:application/pdf;Korthikanti and Agha - 2010 - Avoiding energy wastage in parallel applications.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Korthikanti and Agha - 2010 - Avoiding energy wastage in parallel applications.pdf:application/pdf}
}


@inproceedings{aggarwal_greenadvisor:_2015,
	title = {{GreenAdvisor}: {A} tool for analyzing the impact of software evolution on energy consumption},
	shorttitle = {{GreenAdvisor}},
	doi = {10.1109/ICSM.2015.7332477},
	abstract = {Change-impact analysis, namely “identifying the potential consequences of a change” is an important and well studied problem in software evolution. Any change may potentially affect an application's behaviour, performance, and energy consumption profile. Our previous work demonstrated that changes to the system-call profile of an application correlated with changes to the application's energy-consumption profile. This paper evaluates and describes GreenAdvisor, a first of its kind tool that systematically records and analyzes an application's system calls to predict whether the energy-consumption profile of an application has changed. The GreenAdvisor tool was distributed to numerous software teams, whose members were surveyed about their experience using GreenAdvisor while developing Android applications to examine the energy-consumption impact of selected commits from the teams' projects. GreenAdvisor was evaluated against commits of these teams' projects. The two studies confirm the usefulness of our tool in assisting developers analyze and understand the energy-consumption profile changes of a new version. Based on our study findings, we constructed an improved prediction model to forecast the direction of the change, when a change in the energy-consumption profile is anticipated. This work can potentially be extremely useful to developers who currently have no similar tools.},
	booktitle = {2015 {IEEE} {International} {Conference} on {Software} {Maintenance} and {Evolution} ({ICSME})},
	author = {Aggarwal, K. and Hindle, A. and Stroulia, E.},
	month = sep,
	year = {2015},
	keywords = {Android applications, Application software, application system calls, commits, Data mining, Decision making, Energy consumption, energy-consumption impact, energy-consumption profile changes, energy efficiency, Energy measurement, GreenAdvisor tool, Hardware, Libraries, power aware computing, Software, Software energy consumption, software evolution, software maintenance, software tools},
	pages = {311--320},
	file = {2016-07-14.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\FTAHFTUA\\2016-07-14.txt:text/plain;Aggarwal et al. - 2015 - GreenAdvisor A tool for analyzing the impact of s.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Aggarwal et al. - 2015 - GreenAdvisor A tool for analyzing the impact of s.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\HJGJS23Z\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\A7M438PU\\Aggarwal et al. - 2015 - GreenAdvisor A tool for analyzing the impact of s.pdf:application/pdf}
}


@inproceedings{aggarwal_power_2014,
	address = {Riverton, NJ, USA},
	series = {{CASCON} '14},
	title = {The {Power} of {System} {Call} {Traces}: {Predicting} the {Software} {Energy} {Consumption} {Impact} of {Changes}},
	shorttitle = {The {Power} of {System} {Call} {Traces}},
	abstract = {Battery is a critical resource for smartphones. Software developers as the builders and maintainers of applications, are responsible for updating and deploying energy efficient applications to end users. Unfortunately, the impact of software change on energy consumption is still unclear. Estimation based on software metrics has proved difficult. As energy consumption profiling requires special infrastructure, developers have difficulty assessing the impact of their actions on energy consumption. System calls are the interface between applications and the OS kernel and provide insight into how software utilizes hardware and software resources. As profiling system calls requires no specialized infrastructure, unlike energy consumption, it is much easier for the developers to track changes to system calls. Thus we relate software change to energy consumption by tracing the changes in an application's pattern of system call invocations. We find that significant changes to system call profiles often induce significant changes in energy consumption.},
	booktitle = {Proceedings of 24th {Annual} {International} {Conference} on {Computer} {Science} and {Software} {Engineering}},
	publisher = {IBM Corp.},
	author = {Aggarwal, Karan and Zhang, Chenlei and Campbell, Joshua Charles and Hindle, Abram and Stroulia, Eleni},
	year = {2014},
	pages = {219--233}
}


@inproceedings{hao_estimating_2013,
	title = {Estimating mobile application energy consumption using program analysis},
	doi = {10.1109/ICSE.2013.6606555},
	abstract = {Optimizing the energy efficiency of mobile applications can greatly increase user satisfaction. However, developers lack viable techniques for estimating the energy consumption of their applications. This paper proposes a new approach that is both lightweight in terms of its developer requirements and provides fine-grained estimates of energy consumption at the code level. It achieves this using a novel combination of program analysis and per-instruction energy modeling. In evaluation, our approach is able to estimate energy consumption to within 10\% of the ground truth for a set of mobile applications from the Google Play store. Additionally, it provides useful and meaningful feedback to developers that helps them to understand application energy consumption behavior.},
	booktitle = {2013 35th {International} {Conference} on {Software} {Engineering} ({ICSE})},
	author = {Hao, S. and Li, D. and Halfond, W. G. J. and Govindan, R.},
	month = may,
	year = {2013},
	keywords = {Cost function, Energy consumption, energy consumption estimation, fine-grained energy estimation, Generators, Google Play store, Hardware, Instruments, Mobile app, mobile application energy consumption, Mobile communication, mobile computing, per-instruction energy modeling, program analysis, program diagnostics, Software, user satisfaction},
	pages = {92--101},
	file = {2016-03-15.txt:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Daily Reports\\2016\\March\\2016-03-15.txt:text/plain;Hao et al. - 2013 - Estimating mobile application energy consumption u.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Hao et al. - 2013 - Estimating mobile application energy consumption u.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\BQ3EAMHB\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\S37WDGI8\\Hao et al. - 2013 - Estimating mobile application energy consumption u.pdf:application/pdf}
}


@inproceedings{honig_proactive_2014,
	title = {Proactive {Energy}-{Aware} {Programming} with {PEEK}},
	author = {Honig, Timo and Janker, Heiko and Eibel, Christopher and Mihelic, Oliver and Kapitza, Rüdiger},
	year = {2014},
	file = {2016-07-15.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\ZSRP6KI3\\2016-07-15.txt:text/plain;Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\S4B7W7WP\\Hönig et al. - 2014 - Proactive Energy-Aware Programming with PEEK.pdf:application/pdf;Hönig et al. - 2014 - Proactive Energy-Aware Programming with PEEK.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Hönig et al. - 2014 - Proactive Energy-Aware Programming with PEEK.pdf:application/pdf;Snapshot:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\AWH4PGGR\\187027.html:text/html}
}


@inproceedings{manotas_seeds:_2014,
	address = {New York, NY, USA},
	series = {{ICSE} 2014},
	title = {{SEEDS}: {A} {Software} {Engineer}'s {Energy}-optimization {Decision} {Support} {Framework}},
	isbn = {978-1-4503-2756-5},
	shorttitle = {{SEEDS}},
	doi = {10.1145/2568225.2568297},
	abstract = {Reducing the energy usage of software is becoming more important in many environments, in particular, battery-powered mobile devices, embedded systems and data centers. Recent empirical studies indicate that software engineers can support the goal of reducing energy usage by making design and implementation decisions in ways that take into consideration how such decisions impact the energy usage of an application. However, the large number of possible choices and the lack of feedback and information available to software engineers necessitates some form of automated decision-making support. This paper describes the first known automated support for systematically optimizing the energy usage of applications by making code-level changes. It is effective at reducing energy usage while freeing developers from needing to deal with the low-level, tedious tasks of applying changes and monitoring the resulting impacts to the energy usage of their application. We present a general framework, SEEDS, as well as an instantiation of the framework that automatically optimizes Java applications by selecting the most energy-efficient library implementations for Java's Collections API. Our empirical evaluation of the framework and instantiation show that it is possible to improve the energy usage of an application in a fully automated manner for a reasonable cost.},
	booktitle = {Proceedings of the 36th {International} {Conference} on {Software} {Engineering}},
	publisher = {ACM},
	author = {Manotas, Irene and Pollock, Lori and Clause, James},
	year = {2014},
	keywords = {analysis framework, Energy usage, software optimization},
	pages = {503--514},
	file = {2016-03-02.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\4KIX5MMB\\2016-03-02.txt:text/plain;Manotas et al. - 2014 - SEEDS A Software Engineer's Energy-optimization D.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Manotas et al. - 2014 - SEEDS A Software Engineer's Energy-optimization D.pdf:application/pdf}
}


@inproceedings{sahin_how_2014,
	address = {New York, NY, USA},
	series = {{ESEM} '14},
	title = {How {Do} {Code} {Refactorings} {Affect} {Energy} {Usage}?},
	isbn = {978-1-4503-2774-9},
	doi = {10.1145/2652524.2652538},
	abstract = {Context: Code refactoring's benefits to understandability, maintainability and extensibility are well known enough that automated support for refactoring is now common in IDEs. However, the decision to apply such transformations is currently performed without regard to the impacts of the refactorings on energy consumption. This is primarily due to a lack of information and tools to provide such relevant information to developers. Unfortunately, concerns about energy efficiency are rapidly becoming a high priority concern in many environments, including embedded systems, laptops, mobile devices, and data centers. Goal: We aim to address the lack of information about the energy efficiency impacts of code refactorings. Method: We conducted an empirical study to investigate the energy impacts of 197 applications of 6 commonly-used refactorings. Results: We found that refactorings can not only impact energy usage but can also increase and decrease the amount of energy used by an application. In addition, we also show that metrics commonly believed to correlate with energy usage are unlikely to be able to fully predict the impact of applying a refactoring. Conclusion: The results from this and similar studies could be used to augment IDEs to help software developers build more energy efficient software.},
	booktitle = {Proceedings of the 8th {ACM}/{IEEE} {International} {Symposium} on {Empirical} {Software} {Engineering} and {Measurement}},
	publisher = {ACM},
	author = {Sahin, Cagri and Pollock, Lori and Clause, James},
	year = {2014},
	keywords = {code refactoring, Empirical study, Energy usage},
	pages = {36:1--36:10},
	file = {2016-03-10.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\WDI5Q7FD\\2016-03-10.txt:text/plain;ACM Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\CG43DU6Q\\Sahin et al. - 2014 - How Do Code Refactorings Affect Energy Usage.pdf:application/pdf;Sahin et al. - 2014 - How Do Code Refactorings Affect Energy Usage.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Sahin et al. - 2014 - How Do Code Refactorings Affect Energy Usage.pdf:application/pdf}
}


@inproceedings{zhang_refactoring_2012,
	address = {New York, NY, USA},
	series = {{OOPSLA} '12},
	title = {Refactoring {Android} {Java} {Code} for {On}-demand {Computation} {Offloading}},
	isbn = {978-1-4503-1561-6},
	doi = {10.1145/2384616.2384634},
	abstract = {Computation offloading is a promising way to improve the performance as well as reducing the battery power consumption of a smartphone application by executing some parts of the application on a remote server. Supporting such capability is not easy for smartphone application developers due to (1) correctness: some code, e.g., that for GPS, gravity, and other sensors, can run only on the smartphone so that developers have to identify which parts of the application cannot be offloaded; (2) effectiveness: the reduced execution time must be greater than the network delay caused by computation offloading so that developers need to calculate which parts are worth offloading; (3) adaptability: smartphone applications often face changes of user requirements and runtime environments so that developers need to implement the adaptation on offloading. More importantly, considering the large number of today's smartphone applications, solutions applicable for legacy applications will be much more valuable. In this paper, we present a tool, named DPartner, that automatically refactors Android applications to be the ones with computation offloading capability. For a given Android application, DPartner first analyzes its bytecode for discovering the parts worth offloading, then rewrites the bytecode to implement a special program structure supporting on-demand offloading, and finally generates two artifacts to be deployed onto an Android phone and the server, respectively. We evaluated DPartner on three real-world Android applications, demonstrating the reduction of execution time by 46\%-97\% and battery power consumption by 27\%-83\%.},
	booktitle = {Proceedings of the {ACM} {International} {Conference} on {Object} {Oriented} {Programming} {Systems} {Languages} and {Applications}},
	publisher = {ACM},
	author = {Zhang, Ying and Huang, Gang and Liu, Xuanzhe and Zhang, Wei and Mei, Hong and Yang, Shunxiang},
	year = {2012},
	keywords = {android, bytecode refactoring, computation offloading, energy},
	pages = {233--248},
	file = {2016-03-09.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\K6GCK5FU\\2016-03-09.txt:text/plain;ACM Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\8QKKEDIE\\Zhang et al. - 2012 - Refactoring Android Java Code for On-demand Comput.pdf:application/pdf;Zhang et al. - 2012 - Refactoring Android Java Code for On-demand Comput.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Zhang et al. - 2012 - Refactoring Android Java Code for On-demand Comput.pdf:application/pdf}
}


@inproceedings{park_investigation_2014,
	title = {Investigation for {Software} {Power} {Consumption} of {Code} {Refactoring} {Techniques}},
	booktitle = {The 26th {International} {Conference} on {Software} {Engineering} and {Knowledge} {Engineering}, {Hyatt} {Regency}, {Vancouver}, {BC}, {Canada}, {July} 1-3, 2013},
	publisher = {Knowledge Systems Institute Graduate School},
	author = {Park, Jae Jin and Hong, Jang-Eui and Lee, Sang-Ho},
	editor = {Reformat, Marek},
	year = {2014},
	pages = {717--722},
	file = {2016-02-10.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\29TND69T\\2016-02-10.txt:text/plain;Park et al. - 2014 - Investigation for Software Power Consumption of Co.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Park et al. - 2014 - Investigation for Software Power Consumption of Co.pdf:application/pdf}
}


@book{fowler_refactoring_1999,
	address = {Boston, MA, USA},
	title = {Refactoring: {Improving} the {Design} of {Existing} {Code}},
	isbn = {0-201-48567-2},
	shorttitle = {Refactoring},
	abstract = {As the application of object technology--particularly the Java programming language--has become commonplace, a new problem has emerged to confront the software development community. Significant numbers of poorly designed programs have been created by less-experienced developers, resulting in applications that are inefficient and hard to maintain and extend. Increasingly, software system professionals are discovering just how difficult it is to work with these inherited, "non-optimal" applications. For several years, expert-level object programmers have employed a growing collection of techniques to improve the structural integrity and performance of such existing software programs. Referred to as "refactoring," these practices have remained in the domain of experts because no attempt has been made to transcribe the lore into a form that all developers could use. . .until now. In Refactoring: Improving the Design of Existing Code, renowned object technology mentor Martin Fowler breaks new ground, demystifying these master practices and demonstrating how software practitioners can realize the significant benefits of this new process.With proper training a skilled system designer can take a bad design and rework it into well-designed, robust code. In this book, Martin Fowler shows you where opportunities for refactoring typically can be found, and how to go about reworking a bad design into a good one. Each refactoring step is simple--seemingly too simple to be worth doing. Refactoring may involve moving a field from one class to another, or pulling some code out of a method to turn it into its own method, or even pushing some code up or down a hierarchy. While these individual steps may seem elementary, the cumulative effect of such small changes can radically improve the design. Refactoring is a proven way to prevent software decay.In addition to discussing the various techniques of refactoring, the author provides a detailed catalog of more than seventy proven refactorings with helpful pointers that teach you when to apply them; step-by-step instructions for applying each refactoring; and an example illustrating how the refactoring works. The illustrative examples are written in Java, but the ideas are applicable to any object-oriented programming language. 0201485672B04062001},
	publisher = {Addison-Wesley Longman Publishing Co., Inc.},
	year = {1999},
	file = {1999 - Refactoring Improving the Design of Existing Code.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\1999 - Refactoring Improving the Design of Existing Code.pdf:application/pdf}
}


@inproceedings{reimann_quality-aware_2013,
	title = {Quality-{Aware} {Refactoring} for {Early} {Detection} and {Resolution} of {Energy} {Deficiencies}},
	doi = {10.1109/UCC.2013.70},
	abstract = {Software development processes usually target requirements regarding particular qualities in late iteration phases. The developed system is optimised in terms of quality issues, such as, e.g., energy efficiency, without altering the software's behaviour. Bad structures in terms of specific qualities can be considered as bad smells and refactorings can be used to resolve them to preserve its semantics. The problem is that no explicit relationship between smells, qualities and refactorings exists. Without such a relation it is not possible to give evidence about which quality requirements are not satisfied by detected smells. It cannot be specified which smells are resolved by particular refactorings. Thus, developers are not supported in focusing specific qualities and cannot detect and resolve badly structured code in combination. In this paper we present an approach for correlating smells, qualities and refactorings explicitly which supports to focus on specific qualities in early development phases already. We introduce the new term quality smell and come up with a metamodel and architecture enabling developers to establish such relations. A small evaluation regarding energy efficiency in Java code and discussion completes this paper.},
	booktitle = {2013 {IEEE}/{ACM} 6th {International} {Conference} on {Utility} and {Cloud} {Computing} ({UCC})},
	author = {Reimann, J. and Assmann, U.},
	month = dec,
	year = {2013},
	keywords = {Abstracts, architecture, Concrete, detected smells, energy deficiencies early detection, energy deficiencies resolution, energy efficiency, Energy resolution, Java, Java code, metamodel, Optimization, quality-aware refactoring, quality requirements, quality smell, semantics, Software, Software architecture, software behaviour, software development processes, software maintenance, Software quality, Unified modeling language},
	pages = {321--326},
	file = {2016-02-10.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\45E9PE6R\\2016-02-10.txt:text/plain;IEEE Xplore Abstract Record:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\N4SM9WQQ\\articleDetails.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\XDKJC9ZU\\Reimann and Assmann - 2013 - Quality-Aware Refactoring for Early Detection and .pdf:application/pdf;Reimann and Assmann - 2013 - Quality-Aware Refactoring for Early Detection and .pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Reimann and Assmann - 2013 - Quality-Aware Refactoring for Early Detection and .pdf:application/pdf}
}


@article{maurizio_morisio_definition_2013,
	title = {Definition, implementation and validation of energy code smells: an exploratory study on an embedded system},
	shorttitle = {Definition, implementation and validation of energy code smells},
	author = {Morisio, Maurizio and Ardito, Luca and Vetro', Antonio and Procaccianti, Giuseppe},
	year = {2013},
	pages = {34--39},
	file = {2016-03-16.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\KQ299HIS\\2016-03-16.txt:text/plain;Definition, implementation and validation of energy code smells\: an exploratory study on an embedded system (PDF Download Available):C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\ED92EKN3\\236593463_Definition_implementation_and_validation_of_energy_code_smells_an_exploratory_study_o.html:text/html;Maurizio Morisio - 2013 - Definition, implementation and validation of energ.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Maurizio Morisio - 2013 - Definition, implementation and validation of energ.pdf:application/pdf}
}


@inproceedings{misailovic_chisel:_2014,
	address = {New York, NY, USA},
	series = {{OOPSLA} '14},
	title = {Chisel: {Reliability}- and {Accuracy}-aware {Optimization} of {Approximate} {Computational} {Kernels}},
	isbn = {978-1-4503-2585-1},
	shorttitle = {Chisel},
	doi = {10.1145/2660193.2660231},
	abstract = {The accuracy of an approximate computation is the distance between the result that the computation produces and the corresponding fully accurate result. The reliability of the computation is the probability that it will produce an acceptably accurate result. Emerging approximate hardware platforms provide approximate operations that, in return for reduced energy consumption and/or increased performance, exhibit reduced reliability and/or accuracy.  We present Chisel, a system for reliability- and accuracy-aware optimization of approximate computational kernels that run on approximate hardware platforms. Given a combined reliability and/or accuracy specification, Chisel automatically selects approximate kernel operations to synthesize an approximate computation that minimizes energy consumption while satisfying its reliability and accuracy specification.  We evaluate Chisel on five applications from the image processing, scientific computing, and financial analysis domains. The experimental results show that our implemented optimization algorithm enables Chisel to optimize our set of benchmark kernels to obtain energy savings from 8.7\% to 19.8\% compared to the fully reliable kernel implementations while preserving important reliability guarantees.},
	booktitle = {Proceedings of the 2014 {ACM} {International} {Conference} on {Object} {Oriented} {Programming} {Systems} {Languages} \& {Applications}},
	publisher = {ACM},
	author = {Misailovic, Sasa and Carbin, Michael and Achour, Sara and Qi, Zichao and Rinard, Martin C.},
	year = {2014},
	keywords = {approximate, computing},
	pages = {309--328},
	file = {2016-02-16.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\EA76DS68\\2016-02-16.txt:text/plain;ACM Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\7JQUBB94\\Misailovic et al. - 2014 - Chisel Reliability- and Accuracy-aware Optimizati.pdf:application/pdf;Misailovic et al. - 2014 - Chisel Reliability- and Accuracy-aware Optimizati.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Misailovic et al. - 2014 - Chisel Reliability- and Accuracy-aware Optimizati.pdf:application/pdf}
}


@inproceedings{raha_quality_2015,
	title = {Quality configurable reduce-and-rank for energy efficient approximate computing},
	abstract = {Approximate computing is an emerging design paradigm that exploits the intrinsic ability of applications to produce acceptable outputs even when their computations are executed approximately. In this work, we explore approximate computing for a key computation pattern, Reduce-and-Rank (RnR), which is prevalent in a wide range of workloads including video processing, recognition, search and data mining. An RnR kernel performs a reduction operation (e.g., distance computation, dot product, L1-norm) between an input vector and each of a set of reference vectors, and ranks the reduction outputs to select the top reference vectors for the current input. We propose two complementary approximation strategies for the RnR computation pattern. The first is interleaved reduction-and-ranking, wherein the vector reductions are decomposed into multiple partial reductions and interleaved with the rank computation. Leveraging this transformation, we propose the use of intermediate reduction results and ranks to identify future computations that are likely to have low impact on the output, and can hence be approximated. The second strategy, input similarity based approximation, exploits the spatial or temporal correlation of inputs (e.g., pixels of an image or frames of a video) to identify computations that are amenable to approximation. These strategies address a key challenge in approximate computing - identification of which computations to approximate - and may be used to drive any approximation mechanism such as computation skipping and precision scaling to realize performance or energy improvements. A second key challenge in approximate computing is that the extent to which computations can be approximated varies significantly from application to application, and across inputs for even a single application. Hence, quality configurability, or the ability to automatically modulate the degree of approximation at runtime is essential. To enable quality configurability in RnR ker- els, we propose a kernel-level quality metric that correlates well to application-level quality, and identify key parameters that can be used to tune the proposed approximation strategies dynamically. We develop a runtime framework that modulates the identified parameters during execution of RnR kernels to minimize their energy while meeting a given target quality. To evaluate the proposed concepts, we designed quality-configurable hardware implementations of 6 RnR-based applications from the recognition, mining, search and video processing application domains in 45nm technology. Our experiments demonstrate 1.06X-2.18X reduction in energy consumption with virtually no loss in output quality ({\textless};0.5\%) at the application-level. The energy benefits further improve up to 2.38X and 2.5X when the quality constraints are relaxed to 2.5\% and 5\% respectively.},
	booktitle = {Design, {Automation} {Test} in {Europe} {Conference} {Exhibition} ({DATE}), 2015},
	author = {Raha, A. and Venkataramani, S. and Raghunathan, V. and Raghunathan, A.},
	month = mar,
	year = {2015},
	keywords = {application-level quality, Approximation algorithms, Approximation methods, approximation theory, Calibration, computation skipping, Correlation, Data mining, energy efficient approximate computing, interleaved reduction-and-ranking, Kernel, kernel-level quality metric, pattern recognition, precision scaling, quality configurable reduce-and-rank, RnR computation pattern, search and data mining, search problems, Training, video processing, video recognition},
	pages = {665--670},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\VI3QPN7C\\articleDetails.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\IDFT5FPC\\Raha et al. - 2015 - Quality configurable reduce-and-rank for energy ef.pdf:application/pdf;Raha et al. - 2015 - Quality configurable reduce-and-rank for energy ef.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Raha et al. - 2015 - Quality configurable reduce-and-rank for energy ef.pdf:application/pdf}
}


@inproceedings{baek_green_2010,
	address = {New York, NY, USA},
	series = {{PLDI} '10},
	title = {Green: {A} {Framework} for {Supporting} {Energy}-conscious {Programming} {Using} {Controlled} {Approximation}},
	isbn = {978-1-4503-0019-3},
	shorttitle = {Green},
	doi = {10.1145/1806596.1806620},
	abstract = {Energy-efficient computing is important in several systems ranging from embedded devices to large scale data centers. Several application domains offer the opportunity to tradeoff quality of service/solution (QoS) for improvements in performance and reduction in energy consumption. Programmers sometimes take advantage of such opportunities, albeit in an ad-hoc manner and often without providing any QoS guarantees. We propose a system called Green that provides a simple and flexible framework that allows programmers to take advantage of such approximation opportunities in a systematic manner while providing statistical QoS guarantees. Green enables programmers to approximate expensive functions and loops and operates in two phases. In the calibration phase, it builds a model of the QoS loss produced by the approximation. This model is used in the operational phase to make approximation decisions based on the QoS constraints specified by the programmer. The operational phase also includes an adaptation function that occasionally monitors the runtime behavior and changes the approximation decisions and QoS model to provide strong statistical QoS guarantees. To evaluate the effectiveness of Green, we implemented our system and language extensions using the Phoenix compiler framework. Our experiments using benchmarks from domains such as graphics, machine learning, signal processing, and finance, and an in-production, real-world web search engine, indicate that Green can produce significant improvements in performance and energy consumption with small and controlled QoS degradation.},
	booktitle = {Proceedings of the 31st {ACM} {SIGPLAN} {Conference} on {Programming} {Language} {Design} and {Implementation}},
	publisher = {ACM},
	author = {Baek, Woongki and Chilimbi, Trishul M.},
	year = {2010},
	keywords = {controlled approximation, energy-conscious programming},
	pages = {198--209},
	file = {ACM Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\SG29H636\\Baek and Chilimbi - 2010 - Green A Framework for Supporting Energy-conscious.pdf:application/pdf;Baek and Chilimbi - 2010 - Green A Framework for Supporting Energy-conscious.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Baek and Chilimbi - 2010 - Green A Framework for Supporting Energy-conscious.pdf:application/pdf}
}


@inproceedings{heinrich_energy_2014,
	title = {Energy {Consumption} {Estimation} of {Software} {Components} {Based} on {Program} {Flowcharts}},
	doi = {10.1109/HPCC.2014.102},
	abstract = {This paper presents and evaluates a new approach of energy estimation for single software components based on program flowcharts. This estimation is designed to be applicable early in the design process, which enables system designer to evaluate different design variants with respect to the energy consumption of the later system. The energy estimation model is based on individual flowchart elements and execution probabilities for branches and iterations. The used flowchart elements are for arithmetical calculations, flow control and reads/writes, which are a selection of possible elements used to show the feasibility of the approach. The estimation model is verified in a first step by using three commercially available benchmarks. The flowcharts of these are utilized to estimate the energy consumption by using the presented model. The comparison between estimated and measured energy consumption of an exemplary embedded system results in an estimation error bandwidth between -11.9 \% and +6.9 \%. The main benefit of the presented approach is the applicability within the development phase "System Design" [1], i.e. Previous to any software implementation. This is realized by using only available information of that development phase and generic elements to estimate the energy consumption.},
	booktitle = {2014 {IEEE} {Intl} {Conf} on {High} {Performance} {Computing} and {Communications}, 2014 {IEEE} 6th {Intl} {Symp} on {Cyberspace} {Safety} and {Security}, 2014 {IEEE} 11th {Intl} {Conf} on {Embedded} {Software} and {Syst} ({HPCC},{CSS},{ICESS})},
	author = {Heinrich, P. and Bergler, H. and Eilers, D.},
	month = aug,
	year = {2014},
	keywords = {adaptive systems, automotive electronics, Benchmark testing, embedded, Embedded system, embedded systems, Energy consumption, energy consumption estimation, Energy-efficiency, energy estimation, Equations, Estimation, estimation error bandwidth, estimation theory, flowcharting, Integrated circuit modeling, power aware computing, program flowcharts, software components, Software engineering},
	pages = {542--545},
	file = {2016-08-23.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\9SCJ27MA\\2016-08-23.txt:text/plain;Heinrich et al. - 2014 - Energy Consumption Estimation of Software Componen.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Heinrich et al. - 2014 - Energy Consumption Estimation of Software Componen.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\AFQF8HBE\\articleDetails.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\8C84XUPJ\\Heinrich et al. - 2014 - Energy Consumption Estimation of Software Componen.pdf:application/pdf}
}


@inproceedings{amsel_toward_2011,
	title = {Toward sustainable software engineering: {NIER} track},
	shorttitle = {Toward sustainable software engineering},
	doi = {10.1145/1985793.1985964},
	abstract = {Current software engineering practices have significant effects on the environment. Examples include e-waste from computers made obsolete due to software upgrades, and changes in the power demands of new versions of software. Sustainable software engineering aims to create reliable, long-lasting software that meets the needs of users while reducing environmental impacts. We conducted three related research efforts to explore this area. First, we investigated the extent to which users thought about the environmental impact of their software usage. Second, we created a tool called GreenTracker, which measures the energy consumption of software in order to raise awareness about the environmental impact of software usage. Finally, we explored the indirect environmental effects of software in order to understand how software affects sustainability beyond its own power consumption. The relationship between environmental sustainability and software engineering is complex; understanding both direct and indirect effects is critical to helping humans live more sustainably.},
	booktitle = {2011 33rd {International} {Conference} on {Software} {Engineering} ({ICSE})},
	author = {Amsel, N. and Ibrahim, Z. and Malik, A. and Tomlinson, B.},
	month = may,
	year = {2011},
	keywords = {air pollution, Computers, Energy consumption, environmental factors, environmental impacts, environmental sustainability, green IT, Green products, GreenTracker, power aware computing, power consumption, Software, Software engineering, Software systems, software usage, sustainability, sustainable development, Sustainable software engineering},
	pages = {976--979},
	file = {2016-08-25.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\F7SDEB8E\\2016-08-25.txt:text/plain;Amsel et al. - 2011 - Toward sustainable software engineering NIER trac.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Amsel et al. - 2011 - Toward sustainable software engineering NIER trac.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\D9B4NWIH\\articleDetails.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\6UKGZGZ8\\Amsel et al. - 2011 - Toward sustainable software engineering NIER trac.pdf:application/pdf}
}


@inproceedings{blevis_sustainable_2007,
	address = {New York, NY, USA},
	series = {{CHI} '07},
	title = {Sustainable {Interaction} {Design}: {Invention} \& {Disposal}, {Renewal} \& {Reuse}},
	isbn = {978-1-59593-593-9},
	shorttitle = {Sustainable {Interaction} {Design}},
	doi = {10.1145/1240624.1240705},
	abstract = {This paper presents the perspective that sustainability can and should be a central focus of interaction design-a perspective that is termed Sustainable Interaction Design (SID). As a starting point for a perspective of sustainability, design is defined as an act of choosing among or informing choices of future ways of being. This perspective of sustainability is presented in terms of design values, methods, and reasoning. The paper proposes (i) a rubric for understanding the material effects of particular interaction design cases in terms of forms of use, reuse, and disposal, and (ii) several principles to guide SID. The paper illustrates--with particular examples of design critique for interactive products and appeals to secondary research--how two of these principles may be applied to move the effects of designs from less preferred forms of use to more preferred ones. Finally, a vision for incorporating sustainability into the research and practice of interaction design is described.},
	booktitle = {Proceedings of the {SIGCHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {ACM},
	author = {Blevis, Eli},
	year = {2007},
	keywords = {design, design theory, interaction design, sustainability, sustainable interaction design},
	pages = {503--512},
	file = {ACM Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\ZBV5XZ4Q\\Blevis - 2007 - Sustainable Interaction Design Invention & Dispos.pdf:application/pdf;Blevis - 2007 - Sustainable Interaction Design Invention & Dispos.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Blevis - 2007 - Sustainable Interaction Design Invention & Dispos.pdf:application/pdf}
}


@incollection{iii_energy_2013,
	series = {{SpringerBriefs} in {Computer} {Science}},
	title = {Energy {Delay} {Product}},
	copyright = {©2013 James H. Laros III},
	isbn = {978-1-4471-4491-5 978-1-4471-4492-2},
	abstract = {In this chapter, data from both the CPU frequency tuning experiments (Chap. 6) and the network bandwidth experiments (Chap. 7) are analyzed using a range of fused metrics based on Energy Delay Product (EDP). The analysis in this chapter demonstrates how multiple metrics can be combined and observed as a single fused metric. Additionally, a form of weighted EDP is used to more highly prioritize, or weight, performance over energy savings.},
	language = {en},
	booktitle = {Energy-{Efficient} {High} {Performance} {Computing}},
	publisher = {Springer London},
	author = {James H. Laros and Pedretti, Kevin and Kelly, Suzanne M. and Shu, Wei and Ferreira, Kurt and Vandyke, John and Vaughan, Courtenay},
	year = {2013},
	note = {DOI: 10.1007/978-1-4471-4492-2\_8},
	keywords = {Computer Communication Networks, Operating Systems, Performance and Reliability},
	pages = {51--55},
	file = {Iii et al. - 2013 - Energy-Efficient High Performance Computing - Measurement and Tuning.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Iii et al. - 2013 - Energy-Efficient High Performance Computing - Measurement and Tuning.pdf:application/pdf;Snapshot:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\EWQDMTVQ\\978-1-4471-4492-2_8.html:text/html}
}


@article{noureddine_review_2013,
	title = {A {Review} of {Energy} {Measurement} {Approaches}},
	volume = {47},
	issn = {0163-5980},
	doi = {10.1145/2553070.2553077},
	abstract = {Reducing the energy footprint of digital devices and software is a task challenging the research in Green IT. Researches have proposed approaches for energy management, ranging from reducing usage of software and hardware, compilators optimization, to server consolidation and software migration. However, optimizing the energy consumption requires knowledge of that said consumption. In particular, measuring the energy consumption of hardware and software is an important requirement for efficient energy strategies. In this review, we outline the different categories of approaches in energy measurements, and provide insights into example of each category. We draw recommendations from our review on requirements on how to efficiently measure energy consumption of devices and software.},
	number = {3},
	journal = {SIGOPS Oper. Syst. Rev.},
	author = {Noureddine, Adel and Rouvoy, Romain and Seinturier, Lionel},
	month = nov,
	year = {2013},
	keywords = {Energy management, Energy measurement, energy metrics, review, survey},
	pages = {42--49},
	file = {2016-09-01.txt:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\MEBN98PJ\\2016-09-01.txt:text/plain;ACM Full Text PDF:C\:\\Users\\Stefanos\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8r4f2har.default\\zotero\\storage\\S9JXNJK7\\Noureddine et al. - 2013 - A Review of Energy Measurement Approaches.pdf:application/pdf;Noureddine et al. - 2013 - A Review of Energy Measurement Approaches.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Noureddine et al. - 2013 - A Review of Energy Measurement Approaches.pdf:application/pdf}
}


@inproceedings{peterson_investigating_2011,
	address = {Berkeley, CA, USA},
	series = {{CSET}'11},
	title = {Investigating {Energy} and {Security} {Trade}-offs in the {Classroom} with the {Atom} {LEAP} {Testbed}},
	abstract = {We recently used the Atom LEAP as the foundation for CS 188, an undergraduate research seminar investigating potential trade-offs between security and energy consumption in a hypothetical, battery-powered tablet device. Twenty-three students, in five groups, researched the energy costs of full disk encryption, network cryptography, and sandboxing techniques, as well as the potential savings from two concepts: offloading security computation, and enabling user-level applications to modulate their security behavior based on battery capacity and environmental security. The Atom LEAP is an exciting and powerful tool. A self-contained energy measurement platform, it can generate 10,000 component-level power samples per second during runtime. The Atom LEAP synchronizes individual samples to the time stamp counter of the Intel Atom CPU, allowing us to measure small code segments in the kernel or in user space. The success of CS 188 was possible because of the Atom LEAP's unique capabilities and ease of use. Following the success of the class, we are working to improve the hardware and software tools, in the hope that the Atom LEAP might someday become a widespread tool for energy research and education.},
	booktitle = {Proceedings of the 4th {Conference} on {Cyber} {Security} {Experimentation} and {Test}},
	publisher = {USENIX Association},
	author = {Peterson, Peter A. H. and Singh, Digvijay and Kaiser, William J. and Reiher, Peter L.},
	year = {2011},
	pages = {11--11}
}


@inproceedings{pinto_comprehensive_2016,
	address = {Raleigh, North Carolina, USA},
	title = {A {Comprehensive} {Study} on the {Energy} {Efficiency} of {Java} {Thread}-{Safe} {Collections}},
	booktitle = {Proceedings of the 32nd {IEEE} {International} {Conference} on {Software} {Maintenance} and {Evolution}},
	publisher = {IEEE  Computer Society},
	author = {Pinto, Gustavo and Liu, Kenan and Castor, Fernando},
		year = {2016}
	file = {A Comprehensive Study on the Energy Efficiency of Java Thread-Safe Collections [pdf] | Hacker News:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\l5d17p0h.default\\zotero\\storage\\6C2U3ABA\\item.html:text/html}
}


@inproceedings{li_source-level_2016,
	address = {Raleigh, North Carolina, USA},
	title = {A {Source}-level {Energy} {Optimization} {Framework} for {Mobile} {Applications}},
	booktitle = {16th {International} {Working} {Conference} on {Source} {Code} {Analysis} and {Manipulation}},
	publisher = {IEEE Computer Society},
	author = {Li, Xueliang and Gallagher, John P.},
	month = oct,
	year = {2016},
	file = {2016-10-04.txt:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\C8KPNX73\\2016-10-04.txt:text/plain;Li and Gallagher - A Source-level Energy Optimization Framework for M.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Li and Gallagher - A Source-level Energy Optimization Framework for M.pdf:application/pdf}
}


@article{subramaniam_gbench:_2012,
	title = {{GBench}: benchmarking methodology for evaluating the energy efficiency of supercomputers},
	volume = {28},
	issn = {1865-2034, 1865-2042},
	shorttitle = {{GBench}},
	doi = {10.1007/s00450-012-0218-0},
	abstract = {Recent studies point to power consumption becoming the major design constraint in exascale computing systems. Current scientific benchmarks, such as LINPACK, only evaluate high-performance computing (HPC) systems when running at full throttle, i.e., 100 \% workload, resulting in more of a focus on performance than on power and energy consumption. In contrast, efforts like SPECpower evaluate the energy efficiency of a server at varying workloads. This is analogous to evaluating the fuel efficiency of an automobile at varying speeds. However, the applicability of SPECpower to HPC is limited at best.Given the absence of a scientific benchmark to evaluate the energy efficiency of HPC system at different workloads, we propose GBench (short for Green Benchmark), a methodology to evaluate the energy efficiency of supercomputers and enable a more rigorous study of energy efficiency in HPC. We use LINPACK as a case study and demonstrate the efficacy of our methodology by identifying application parameters impacting performance and providing a systematic methodology to vary the workload of LINPACK.},
	language = {en},
	number = {2-3},
	journal = {Computer Science - Research and Development},
	author = {Subramaniam, Balaji and Feng, Wu-chun},
	month = may,
	year = {2012},
	pages = {221--230},
	file = {Subramaniam and Feng - 2012 - GBench benchmarking methodology for evaluating th.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Subramaniam and Feng - 2012 - GBench benchmarking methodology for evaluating th.pdf:application/pdf}
}


@inproceedings{colmant_process-level_2015,
	address = {New York, NY, USA},
	series = {{EuroSys} '15},
	title = {Process-level {Power} {Estimation} in {VM}-based {Systems}},
	isbn = {978-1-4503-3238-5},
	doi = {10.1145/2741948.2741971},
	abstract = {Power estimation of software processes provides critical indicators to drive scheduling or power capping heuristics. State-of-the-art solutions can perform coarse-grained power estimation in virtualized environments, typically treating virtual machines (VMs) as a black box. Yet, VM-based systems are nowadays commonly used to host multiple applications for cost savings and better use of energy by sharing common resources and assets. In this paper, we propose a fine-grained monitoring middleware providing real-time and accurate power estimation of software processes running at any level of virtualization in a system. In particular, our solution automatically learns an application-agnostic power model, which can be used to estimate the power consumption of applications. Our middleware implementation, named BitWatts, builds on a distributed actor implementation to collect process usage and infer fine-grained power consumption without imposing any hardware investment (e.g., power meters). BitWatts instances use high-throughput communication channels to spread the power consumption across the VM levels and between machines. Our experiments, based on CPU- and memory-intensive benchmarks running on different hardware setups, demonstrate that BitWatts scales both in number of monitored processes and virtualization levels. This non-invasive monitoring solution therefore paves the way for scalable energy accounting that takes into account the dynamic nature of virtualized environments.},
	booktitle = {Proceedings of the {Tenth} {European} {Conference} on {Computer} {Systems}},
	publisher = {ACM},
	author = {Colmant, Maxime and Kurpicz, Mascha and Felber, Pascal and Huertas, Loïc and Rouvoy, Romain and Sobe, Anita},
	year = {2015},
	pages = {14:1--14:14},
	file = {Colmant et al. - 2015 - Process-level Power Estimation in VM-based Systems.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Colmant et al. - 2015 - Process-level Power Estimation in VM-based Systems.pdf:application/pdf}
}


@inproceedings{mukhanov_alea:_2015,
	address = {Washington, DC, USA},
	series = {{PACT} '15},
	title = {{ALEA}: {Fine}-{Grain} {Energy} {Profiling} with {Basic} {Block} {Sampling}},
	isbn = {978-1-4673-9524-3},
	shorttitle = {{ALEA}},
	doi = {10.1109/PACT.2015.16},
	abstract = {Energy efficiency is an essential requirement for all contemporary computing systems. We thus need tools to measure the energy consumption of computing systems and to understand how workloads affect it. Significant recent research effort has targeted direct power measurements on production computing systems using on-board sensors or external instruments. These direct methods have in turn guided studies of software techniques to reduce energy consumption via workload allocation and scaling. Unfortunately, direct energymeasurementsarehamperedbythelowpowersampling frequency of power sensors. The coarse granularity of power sensing limits our understanding of how power is allocated in systems and our ability to optimize energy efficiency via workload allocation. We present ALEA, a tool to measure power and energy consumption at the granularity of basic blocks, using a probabilistic approach. ALEA provides fine-grained energy profiling via statistical sampling, which overcomes the limitations of power sensing instruments. Compared to state-of-the-art energy measurement tools, ALEA provides finer granularity without sacrificing accuracy. ALEA achieves low overhead energy measurements with mean error rates between 1.4\% and 3.5\% in 14 sequential and parallel benchmarks tested on both Intel and ARM platforms. The sampling method caps execution time overhead at approximately 1\%. ALEA is thus suitable for online energy monitoring and optimization. Finally, ALEA is a user-space tool with a portable, machine-independent sampling method. We demonstrate three use cases of ALEA, where we reduce the energy consumption of a k-means computational kernel by 37\%, an ocean modeling code by 33\%, and a ray tracing code by 6\% compared to high-performance execution baselines, by varying the power optimization strategy between basic blocks.},
	booktitle = {Proceedings of the 2015 {International} {Conference} on {Parallel} {Architecture} and {Compilation} ({PACT})},
	publisher = {IEEE Computer Society},
	author = {Mukhanov, Lev and Nikolopoulos, Dimitrios S. and Supinski, Bronis R. de},
	year = {2015},
	pages = {87--98},
	file = {Mukhanov et al. - 2015 - ALEA - Fine-Grain Energy Profiling with Basic Block Sampling.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Mukhanov et al. - 2015 - ALEA - Fine-Grain Energy Profiling with Basic Block Sampling.pdf:application/pdf}
}


@article{beghoura_green_2015,
	title = {Green software requirements and measurement: random decision forests-based software energy consumption profiling},
	issn = {0947-3602, 1432-010X},
	shorttitle = {Green software requirements and measurement},
	doi = {10.1007/s00766-015-0234-2},
	abstract = {This paper proposes an explicit definition of green software requirements and a tool to support their evaluation . The proposed evaluation tool describes the green efficiency by considering the energy consumption as the main aspect to be studied during the development stage. This approach consists of building a multiple regression model, by using a supervised learning algorithm, in order to reproduce the energy consumption pattern of devices at different workload circumstances. The energy consumption model is then deployed to estimate the impact of software applications based on their resource usage. Our work has been validated on desktop and mobile devices. The experiments show the effectiveness of the proposed energy profiling tool that provided relevant information on the energy consumption of software applications.},
	language = {en},
	journal = {Requirements Engineering},
	author = {Beghoura, Mohamed Amine and Boubetra, Abdelhak and Boukerram, Abdallah},
	month = jul,
	year = {2015},
	pages = {1--14},
	file = {2016-11-01.txt:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\BJCFF88S\\2016-11-01.txt:text/plain;Beghoura et al. - 2015 - Green software requirements and measurement rando.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Beghoura et al. - 2015 - Green software requirements and measurement rando.pdf:application/pdf;Snapshot:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\Q3VSPAW4\\s00766-015-0234-2.html:text/html}
}


@inproceedings{chen_android_2016,
	title = {Android {App} {Energy} {Efficiency}: {The} {Impact} of {Language}, {Runtime}, {Compiler}, and {Implementation}},
	shorttitle = {Android {App} {Energy} {Efficiency}},
	doi = {10.1109/BDCloud-SocialCom-SustainCom.2016.77},
	abstract = {With millions of smart phones being purchased every year, the number of mobile applications that have been developed and installed keeps growing substantially. In 2016, Android-based phones dominate the market with 80.7\% of market share and there are over 1.6 million apps in Google Play. The battery power limitation requires each app to reduce its impact on the battery life. Existing research and practices focus on how to optimize battery life by reducing network battery drain, judiciously turning off or dimming screens, dynamically adjusting CPU frequency of inactive apps, and changing app behaviors based on different battery states. These studies have greatly helped to improve the energy efficiency of Android apps. However, very few work has been conducted to analyze the impact of programming languages, compilers, runtime, and implementation choices on power consumption of Android apps, which is equally important for Android app developers to write more energy efficient code. This paper addresses the aforementioned problems by making the following contributions: 1) we develop the Android Energy Profiler (AEP) to measure the detailed power consumption of various Android apps, 2) we analyze the impact of different languages (C/C++/Java) and compiler optimization on energy consumption, 3) we study the impact of different Android system runtimes (ART vs. Dalvik) on energy efficiency, 4) we evaluate the impact of implementation choices (recursion vs. iteration and serial vs. parallel) on energy efficiency, and 5) we verify if thin client design can always lead to better energy efficiency.},
	booktitle = {2016 {IEEE} {International} {Conferences} on {Big} {Data} and {Cloud} {Computing} ({BDCloud}), {Social} {Computing} and {Networking} ({SocialCom}), {Sustainable} {Computing} and {Communications} ({SustainCom}) ({BDCloud}-{SocialCom}-{SustainCom})},
	author = {Chen, X. and Zong, Z.},
	month = oct,
	year = {2016},
	keywords = {Batteries, Energy consumption, Google, Power demand, Power measurement, Runtime, smart phones},
	pages = {485--492},
	file = {2016-11-11.txt:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\94VVHZX4\\2016-11-11.txt:text/plain;Chen and Zong - 2016 - Android App Energy Efficiency The Impact of Langu.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Chen and Zong - 2016 - Android App Energy Efficiency The Impact of Langu.pdf:application/pdf;IEEE Xplore Abstract Record:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\R2UJIGX7\\7723731.html:text/html}
}






@article{liu_virtual_2010,
	title = {Virtual {Machine} {Power} {Metering} and {Provisioning}},
	abstract = {Virtualization is often used in cloud computing platforms for its several advantages in efficient management of the physical resources. However, virtualization raises certain additional challenges, and one of them is lack of power metering for virtual machines (VMs). Power management requirements in modern data centers have led to most new servers providing power usage measurement …},
	journal = {Microsoft Research},
	author = {Liu, Jie and Zhao, Feng and Kansal, Aman},
	month = jun,
	year = {2010},
	file = {Full Text PDF:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\TQCM2PQC\\Liu et al. - 2010 - Virtual Machine Power Metering and Provisioning.pdf:application/pdf;Liu et al. - 2010 - Virtual Machine Power Metering and Provisioning.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Liu et al. - 2010 - Virtual Machine Power Metering and Provisioning.pdf:application/pdf;Snapshot:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\4QBNBENX\\virtual-machine-power-metering-and-provisioning.html:text/html}
}


@inproceedings{sampson_enerj:_2011,
	address = {New York, NY, USA},
	series = {{PLDI} '11},
	title = {{EnerJ}: {Approximate} {Data} {Types} for {Safe} and {General} {Low}-power {Computation}},
	isbn = {978-1-4503-0663-8},
	shorttitle = {{EnerJ}},
	doi = {10.1145/1993498.1993518},
	abstract = {Energy is increasingly a first-order concern in computer systems. Exploiting energy-accuracy trade-offs is an attractive choice in applications that can tolerate inaccuracies. Recent work has explored exposing this trade-off in programming models. A key challenge, though, is how to isolate parts of the program that must be precise from those that can be approximated so that a program functions correctly even as quality of service degrades. We propose using type qualifiers to declare data that may be subject to approximate computation. Using these types, the system automatically maps approximate variables to low-power storage, uses low-power operations, and even applies more energy-efficient algorithms provided by the programmer. In addition, the system can statically guarantee isolation of the precise program component from the approximate component. This allows a programmer to control explicitly how information flows from approximate data to precise data. Importantly, employing static analysis eliminates the need for dynamic checks, further improving energy savings. As a proof of concept, we develop EnerJ, an extension to Java that adds approximate data types. We also propose a hardware architecture that offers explicit approximate storage and computation. We port several applications to EnerJ and show that our extensions are expressive and effective; a small number of annotations lead to significant potential energy savings (10\%-50\%) at very little accuracy cost.},
	booktitle = {Proceedings of the 32Nd {ACM} {SIGPLAN} {Conference} on {Programming} {Language} {Design} and {Implementation}},
	publisher = {ACM},
	author = {Sampson, Adrian and Dietl, Werner and Fortuna, Emily and Gnanapragasam, Danushen and Ceze, Luis and Grossman, Dan},
	year = {2011},
	keywords = {accuracy-aware computing, critical data, energy, power-aware computing, soft errors},
	pages = {164--174},
	file = {ACM Full Text PDF:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\4EDK44QJ\\Sampson et al. - 2011 - EnerJ Approximate Data Types for Safe and General.pdf:application/pdf;Sampson et al. - 2011 - EnerJ Approximate Data Types for Safe and General.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Sampson et al. - 2011 - EnerJ Approximate Data Types for Safe and General.pdf:application/pdf}
}


@inproceedings{pereira_influence_2016,
	address = {New York, NY, USA},
	series = {{GREENS} '16},
	title = {The {Influence} of the {Java} {Collection} {Framework} on {Overall} {Energy} {Consumption}},
	isbn = {978-1-4503-4161-5},
	url = {http://doi.acm.org/10.1145/2896967.2896968},
	doi = {10.1145/2896967.2896968},
	abstract = {This paper presents a detailed study of the energy consumption of the different Java Collection Framework (JFC) implementations. For each method of an implementation in this framework, we present its energy consumption when handling different amounts of data. Knowing the greenest methods for each implementation, we present an energy optimization approach for Java programs: based on calls to JFC methods in the source code of a program, we select the greenest implementation. Finally, we present preliminary results of optimizing a set of Java programs where we obtained 6.2\% energy savings.},
	urldate = {2016-09-30},
	booktitle = {Proceedings of the 5th {International} {Workshop} on {Green} and {Sustainable} {Software}},
	publisher = {ACM},
	author = {Pereira, Rui and Couto, Marco and Saraiva, João and Cunha, Jácome and Fernandes, João Paulo},
	year = {2016},
	keywords = {energy-aware software, green computing},
	pages = {15--21},
	file = {2016-10-03.txt:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\32SQVQE2\\2016-10-03.txt:text/plain;ACM Full Text PDF:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\BCJF9WPZ\\Pereira et al. - 2016 - The Influence of the Java Collection Framework on .pdf:application/pdf;Pereira et al. - 2016 - The Influence of the Java Collection Framework on .pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Pereira et al. - 2016 - The Influence of the Java Collection Framework on .pdf:application/pdf}
}


@book{gamma_design_1995,
	address = {Boston, MA, USA},
	title = {Design {Patterns}: {Elements} of {Reusable} {Object}-oriented {Software}},
	isbn = {978-0-201-63361-0},
	shorttitle = {Design {Patterns}},
	publisher = {Addison-Wesley Longman Publishing Co., Inc.},
	author = {Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John},
	year = {1995}
}


@inproceedings{bohra_vmeter:_2010,
	title = {{VMeter}: {Power} modelling for virtualized clouds},
	shorttitle = {{VMeter}},
	doi = {10.1109/IPDPSW.2010.5470907},
	abstract = {Data centers are seeing unprecedented growth in recent years. The energy requirements to operate these large scale facilities are increasing significantly both in terms of operation cost as well as their indirect impact on ecology due to high carbon emissions. There are several ongoing research efforts towards the development of an integrated cloud management system to provide comprehensive online monitoring of resource utilization along with the implementation of power-aware policies to reduce the total energy consumption. However, most of these techniques provide online power monitoring based on the power consumption of a physical node running one or more Virtual Machines (VM). They lack a fine-grained mechanism to profile the power of an individual hosted VM. In this work we present a novel power modelling technique, VMeter, based on online monitoring of system-resources having high correlation with the total power consumption. The monitored system sub-components include: CPU, cache, disk, and DRAM. The proposed model predicts instantaneous power consumption of an individual VM hosted on a physical node besides the full system power consumption. Our model is validated using computationally diverse and industry standard benchmark programs. Our evaluation results show that our model is able to predict instantaneous power with an average mean and median accuracy of 93\% and 94\%, respectively, against the actual measured power using an externally attached power meter.},
	booktitle = {2010 {IEEE} {International} {Symposium} on {Parallel} {Distributed} {Processing}, {Workshops} and {Phd} {Forum} ({IPDPSW})},
	author = {Bohra, A. E. Husain and Chaudhary, V.},
	month = apr,
	year = {2010},
	keywords = {Biological system modeling, Cloud computing, Clouds, computer centres, Costs, datacenter, Data centers, Energy consumption, full system power consumption, instantaneous power consumption, integrated cloud management system, Internet, Large-scale systems, power aware computing, power-aware policy, power meter, power meters, power modelling technique, Power prediction model, Power system modeling, Predictive models, Resource management, system resource online monitoring, virtualized cloud, Virtual machine monitors, virtual machines, Virtual manufacturing, VMeter},
	pages = {1--8},
	file = {Bohra and Chaudhary - 2010 - VMeter Power modelling for virtualized clouds.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Bohra and Chaudhary - 2010 - VMeter Power modelling for virtualized clouds.pdf:application/pdf;IEEE Xplore Abstract Record:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\AGJX5XCW\\5470907.html:text/html}
}


@inproceedings{banerjee_detecting_2014,
	address = {New York, NY, USA},
	series = {{FSE} 2014},
	title = {Detecting {Energy} {Bugs} and {Hotspots} in {Mobile} {Apps}},
	isbn = {978-1-4503-3056-5},
	doi = {10.1145/2635868.2635871},
	abstract = {Over the recent years, the popularity of smartphones has increased dramatically. This has lead to a widespread availability of smartphone applications. Since smartphones operate on a limited amount of battery power, it is important to develop tools and techniques that aid in energy-efficient application development. Energy inefficiencies in smartphone applications can broadly be categorized into energy hotspots and energy bugs. An energy hotspot can be described as a scenario where executing an application causes the smartphone to consume abnormally high amount of battery power, even though the utilization of its hardware resources is low. In contrast, an energy bug can be described as a scenario where a malfunctioning application prevents the smartphone from becoming idle, even after it has completed execution and there is no user activity. In this paper, we present an automated test generation framework that detects energy hotspots/bugs in Android applications. Our framework systematically generates test inputs that are likely to capture energy hotspots/bugs. Each test input captures a sequence of user interactions (e.g. touches or taps on the smartphone screen) that leads to an energy hotspot/bug in the application. Evaluation with 30 freely-available Android applications from Google Play/F-Droid shows the efficacy of our framework in finding hotspots/bugs. Manual validation of the experimental results shows that our framework reports reasonably low number of false positives. Finally, we show the usage of the generated results by improving the energy-efficiency of some Android applications.},
	booktitle = {Proceedings of the 22Nd {ACM} {SIGSOFT} {International} {Symposium} on {Foundations} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Banerjee, Abhijeet and Chong, Lee Kee and Chattopadhyay, Sudipta and Roychoudhury, Abhik},
	year = {2014},
	keywords = {Energy consumption, mobile apps, Non-functional testing},
	pages = {588--598},
	file = {ACM Full Text PDF:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\CN6JJKFB\\Banerjee et al. - 2014 - Detecting Energy Bugs and Hotspots in Mobile Apps.pdf:application/pdf;Banerjee et al. - 2014 - Detecting Energy Bugs and Hotspots in Mobile Apps.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Banerjee et al. - 2014 - Detecting Energy Bugs and Hotspots in Mobile Apps.pdf:application/pdf}
}


@inproceedings{michanan_predicting_2015,
	title = {Predicting data structures for energy efficient computing},
	doi = {10.1109/IGCC.2015.7393698},
	abstract = {Dynamic data structures in software applications have been shown to have a large impact on system performance. In this paper, we explore energy saving opportunities of interface-based dynamic data structures. Our results suggest that opportunities do exist in the C5 Collection, at least 16.95\% and up to 97.50\%. We propose an architecture for building adaptive green data structures by applying machine learning tools to build a model for predicting energy efficient data structures. Our neural network model can classify energy efficient data structures based on features such as the number of elements, frequency of operations, interface and set/bag semantics. The 10-fold cross validation results show 96.01\% accuracy on the training data and 95.80\% on the training validation data. Our n-gram model can accurately predict the most energy efficient data structure sequence in 19 simulated and real-world programs-on average, with more than 50\% accuracy and up to 98\% using a bigram predictor.},
	booktitle = {2015 {Sixth} {International} {Green} and {Sustainable} {Computing} {Conference} ({IGSC})},
	author = {Michanan, J. and Dewri, R. and Rutherford, M. J.},
	month = dec,
	year = {2015},
	keywords = {Adaptation models, adaptive green data structures, Bigram, bigram predictor, C5 Collection, data structures, Efficiency, energy, Energy consumption, energy efficiency, energy efficient computing, energy efficient data structures, green computing, Green Data Structure, Green products, interface-based dynamic data structures, learning (artificial intelligence), Machine Learning, machine learning tools, neural nets, Neural Network, neural network model, N-Gram, n-gram model, performance, power, power aware computing, Predictive models, Software, Software Adaptation},
	pages = {1--8},
	file = {IEEE Xplore Abstract Record:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\MGKBFFNE\\7393698.html:text/html;Michanan et al. - 2015 - Predicting data structures for energy efficient co.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Michanan et al. - 2015 - Predicting data structures for energy efficient co.pdf:application/pdf}
}


@inproceedings{hao_estimating_2012,
	title = {Estimating {Android} applications' {CPU} energy usage via bytecode profiling},
	doi = {10.1109/GREENS.2012.6224263},
	abstract = {Optimizing the energy efficiency of mobile applications can greatly increase user satisfaction. However, developers lack easily applied tools for estimating the energy consumption of their applications. This paper proposes a new approach, eCalc, that is lightweight in terms of its developer requirements and provides code-level estimates of energy consumption. The approach achieves this using estimation techniques based on program analysis of the mobile application. In evaluation, eCalc is able to estimate energy consumption within 9.5\% of the ground truth for a set of mobile applications. Additionally, eCalc provides useful and meaningful feedback to the developer that helps to characterize energy consumption of the application.},
	booktitle = {2012 {First} {International} {Workshop} on {Green} and {Sustainable} {Software} ({GREENS})},
	author = {Hao, S. and Li, D. and Halfond, W. G. J. and Govindan, R.},
	month = jun,
	year = {2012},
	keywords = {Accuracy, android applications CPU energy usage estimation, Android apps, Benchmark testing, bytecode profiling, code level estimation, eCalc, Energy consumption, energy efficiency, energy estimation, Energy measurement, estimation theory, Hardware, mobile applications, mobile computing, Monitoring, power aware computing, Software, user satisfaction},
	pages = {1--7},
	file = {Hao et al. - 2012 - Estimating Android applications' CPU energy usage .pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Hao et al. - 2012 - Estimating Android applications' CPU energy usage .pdf:application/pdf;IEEE Xplore Abstract Record:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\JNAIFFSN\\6224263.html:text/html}
}


@inproceedings{david_rapl_2010,
	address = {New York, NY, USA},
	series = {{ISLPED} '10},
	title = {{RAPL}: {Memory} {Power} {Estimation} and {Capping}},
	isbn = {978-1-4503-0146-6},
	shorttitle = {{RAPL}},
	url = {http://doi.acm.org/10.1145/1840845.1840883},
	doi = {10.1145/1840845.1840883},
	abstract = {The drive for higher performance and energy efficiency in data-centers has influenced trends toward increased power and cooling requirements in the facilities. Since enterprise servers rarely operate at their peak capacity, efficient power capping is deemed as a critical component of modern enterprise computing environments. In this paper we propose a new power measurement and power limiting architecture for main memory. Specifically, we describe a new approach for measuring memory power and demonstrate its applicability to a novel power limiting algorithm. We implement and evaluate our approach in the modern servers and show that we achieve up to 40\% lower performance impact when compared to the state-of-art baseline across the power limiting range.},
	urldate = {2016-12-12},
	booktitle = {Proceedings of the 16th {ACM}/{IEEE} {International} {Symposium} on {Low} {Power} {Electronics} and {Design}},
	publisher = {ACM},
	author = {David, Howard and Gorbatov, Eugene and Hanebutte, Ulf R. and Khanna, Rahul and Le, Christian},
	year = {2010},
	keywords = {DRAM memory, measurements, power},
	pages = {189--194}
}



@inproceedings{pinto_mining_2014,
	address = {New York, NY, USA},
	series = {{MSR} 2014},
	title = {Mining {Questions} {About} {Software} {Energy} {Consumption}},
	isbn = {978-1-4503-2863-0},
	url = {http://doi.acm.org/10.1145/2597073.2597110},
	doi = {10.1145/2597073.2597110},
	abstract = {A growing number of software solutions have been proposed to address application-level energy consumption problems in the last few years. However, little is known about how much software developers are concerned about energy consumption, what aspects of energy consumption they consider important, and what solutions they have in mind for improving energy efficiency. In this paper we present the first empirical study on understanding the views of application programmers on software energy consumption problems. Using StackOverflow as our primary data source, we analyze a carefully curated sample of more than 300 questions and 550 answers from more than 800 users. With this data, we observed a number of interesting findings. Our study shows that practitioners are aware of the energy consumption problems: the questions they ask are not only diverse -- we found 5 main themes of questions -- but also often more interesting and challenging when compared to the control question set. Even though energy consumption-related questions are popular when considering a number of different popularity measures, the same cannot be said about the quality of their answers. In addition, we observed that some of these answers are often flawed or vague. We contrast the advice provided by these answers with the state-of-the-art research on energy consumption. Our summary of software energy consumption problems may help researchers focus on what matters the most to software developers and end users.},
	urldate = {2016-05-31},
	booktitle = {Proceedings of the 11th {Working} {Conference} on {Mining} {Software} {Repositories}},
	publisher = {ACM},
	author = {Pinto, Gustavo and Castor, Fernando and Liu, Yu David},
	year = {2014},
	keywords = {Practitioners, Q\&A, software energy consumption},
	pages = {22--31},
	file = {Pinto et al. - 2014 - Mining Questions About Software Energy Consumption.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Energy-related quanititive studies\\Pinto et al. - 2014 - Mining Questions About Software Energy Consumption.pdf:application/pdf}
}


@inproceedings{kwon_reducing_2013,
	title = {Reducing the {Energy} {Consumption} of {Mobile} {Applications} {Behind} the {Scenes}},
	doi = {10.1109/ICSM.2013.28},
	abstract = {As energy efficiency has become a key consideration in the engineering of mobile applications, an increasing number of perfective maintenance tasks are concerned with optimizing energy consumption. However, optimizing a mobile application to reduce its energy consumption is non-trivial due to the highly volatile nature of mobile execution environments. Mobile applications commonly run on a variety of mobile devices over mobile networks with divergent characteristics. Therefore, no single, static energy consumption optimization is likely to yield across-the-board benefits, and may even turn to be detrimental in some scenarios. In this paper, we present a novel approach to perfective maintenance of mobile applications to reduce their energy consumption. The maintenance programmer declaratively specifies the suspected energy consumption hotspots in a mobile application. Based on this input, our approach then automatically transforms the application to enable it to offload parts of its functionality to the cloud. The offloading is highly adaptive, being driven by a runtime system that dynamically determines both the state-to-offload and its transfer mechanism based on the execution environment in place. In addition, the runtime system continuously improves its effectiveness due to a feedback-loop mechanism. Thus, our approach flexibly reduces the energy consumption of mobile applications behind the scenes. Applying our approach to third- party Android applications has shown that it can effectively reduce the overall amount of energy consumed by these applications, with the actual numbers ranging between 25\% and 50\%. These results indicate that our approach represents a promising direction in developing pragmatic and systematic tools for the perfective maintenance of mobile applications.},
	booktitle = {2013 29th {IEEE} {International} {Conference} on {Software} {Maintenance} ({ICSM})},
	author = {Kwon, Young-Woo and Tilevich, E.},
	month = sep,
	year = {2013},
	keywords = {Delays, Energy consumption, energy consumption reduction, energy efficiency, feedback-loop mechanism, Maintenance engineering, maintenance programmer, mobile applications, Mobile communication, mobile computing, mobile execution environments, Mobile handsets, operating systems (computers), Runtime, runtime system, static energy consumption optimization, third- party Android applications},
	pages = {170--179},
	file = {Kwon and Tilevich - 2013 - Reducing the Energy Consumption of Mobile Applicat.pdf:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\U2ZET6WZ\\Kwon and Tilevich - 2013 - Reducing the Energy Consumption of Mobile Applicat.pdf:application/pdf}
}


@inproceedings{imes_portable_2016,
	address = {New York, NY, USA},
	series = {{FSE} 2016},
	title = {A {Portable} {Interface} for {Runtime} {Energy} {Monitoring}},
	isbn = {978-1-4503-4218-6},
	url = {http://doi.acm.org/10.1145/2950290.2983956},
	doi = {10.1145/2950290.2983956},
	abstract = {As energy consumption becomes a first class concern for computing systems, there is an increasing need for application-level access to runtime power/energy measurements. To support this need, a growing number of power and energy monitors are being developed, each with their own interfaces. In fact, the approaches are extremely diverse, and porting energy-aware code to new platforms with new hardware can involve significant rewriting effort. To reduce this effort and support portable, application-level energy monitoring, a common interface is needed. In this paper, we propose EnergyMon, a portable application interface that is independent of underlying power/energy data sources. We demonstrate EnergyMon's flexibility with two case studies -- energy-aware profiling and self-adaptive systems, each of which requires monitoring energy across a range of hardware from different manufacturers. We release the EnergyMon interface, implementations, utilities, and Java and Rust bindings and abstractions as open source.},
	urldate = {2016-11-23},
	booktitle = {Proceedings of the 2016 24th {ACM} {SIGSOFT} {International} {Symposium} on {Foundations} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Imes, Connor and Bergstrom, Lars and Hoffmann, Henry},
	year = {2016},
	keywords = {energy, Measurement, portable},
	pages = {968--974},
	file = {ACM Full Text PDF:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\DT7BBPP2\\Imes et al. - 2016 - A Portable Interface for Runtime Energy Monitoring.pdf:application/pdf;Imes et al. - 2016 - A Portable Interface for Runtime Energy Monitoring.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Imes et al. - 2016 - A Portable Interface for Runtime Energy Monitoring.pdf:application/pdf}
}


@inproceedings{royce_managing_1987,
	address = {Los Alamitos, CA, USA},
	series = {{ICSE} '87},
	title = {Managing the {Development} of {Large} {Software} {Systems}: {Concepts} and {Techniques}},
	isbn = {978-0-89791-216-7},
	shorttitle = {Managing the {Development} of {Large} {Software} {Systems}},
	url = {http://dl.acm.org/citation.cfm?id=41765.41801},
	urldate = {2017-02-06},
	booktitle = {Proceedings of the 9th {International} {Conference} on {Software} {Engineering}},
	publisher = {IEEE Computer Society Press},
	author = {Royce, W. W.},
	year = {1987},
	pages = {328--338}
}


@inproceedings{pathak_where_2012,
	address = {New York, NY, USA},
	series = {{EuroSys} '12},
	title = {Where is the {Energy} {Spent} {Inside} {My} {App}?: {Fine} {Grained} {Energy} {Accounting} on {Smartphones} with {Eprof}},
	isbn = {978-1-4503-1223-3},
	shorttitle = {Where is the {Energy} {Spent} {Inside} {My} {App}?},
	url = {http://doi.acm.org/10.1145/2168836.2168841},
	doi = {10.1145/2168836.2168841},
	abstract = {Where is the energy spent inside my app? Despite the immense popularity of smartphones and the fact that energy is the most crucial aspect in smartphone programming, the answer to the above question remains elusive. This paper first presents eprof, the first fine-grained energy profiler for smartphone apps. Compared to profiling the runtime of applications running on conventional computers, profiling energy consumption of applications running on smartphones faces a unique challenge, asynchronous power behavior, where the effect on a component's power state due to a program entity lasts beyond the end of that program entity. We present the design, implementation and evaluation of eprof on two mobile OSes, Android and Windows Mobile. We then present an in-depth case study, the first of its kind, of six popular smartphones apps (including Angry-Birds, Facebook and Browser). Eprof sheds lights on internal energy dissipation of these apps and exposes surprising findings like 65\%-75\% of energy in free apps is spent in third-party advertisement modules. Eprof also reveals several "wakelock bugs", a family of "energy bugs" in smartphone apps, and effectively pinpoints their location in the source code. The case study highlights the fact that most of the energy in smartphone apps is spent in I/O, and I/O events are clustered, often due to a few routines. Thismotivates us to propose bundles, a new accounting presentation of app I/O energy, which helps the developer to quickly understand and optimize the energy drain of her app. Using the bundle presentation, we reduced the energy consumption of four apps by 20\% to 65\%.},
	urldate = {2016-06-29},
	booktitle = {Proceedings of the 7th {ACM} {European} {Conference} on {Computer} {Systems}},
	publisher = {ACM},
	author = {Pathak, Abhinav and Hu, Y. Charlie and Zhang, Ming},
	year = {2012},
	keywords = {energy, Eprof, Mobile, smartphones},
	pages = {29--42},
	file = {Pathak et al. - 2012 - Where is the Energy Spent Inside My App Fine Gra.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Pathak et al. - 2012 - Where is the Energy Spent Inside My App Fine Gra.pdf:application/pdf}
}


@inproceedings{pathak_fine-grained_2011,
	address = {New York, NY, USA},
	series = {{EuroSys} '11},
	title = {Fine-grained {Power} {Modeling} for {Smartphones} {Using} {System} {Call} {Tracing}},
	isbn = {978-1-4503-0634-8},
	url = {http://doi.acm.org/10.1145/1966445.1966460},
	doi = {10.1145/1966445.1966460},
	abstract = {Accurate, fine-grained online energy estimation and accounting of mobile devices such as smartphones is of critical importance to understanding and debugging the energy consumption of mobile applications. We observe that state-of-the-art, utilization-based power modeling correlates the (actual) utilization of a hardware component with its power state, and hence is insufficient in capturing several power behavior not directly related to the component utilization in modern smartphones. Such behavior arise due to various low level power optimizations programmed in the device drivers. We propose a new, system-call-based power modeling approach which gracefully encompasses both utilization-based and non-utilization-based power behavior. We present the detailed design of such a power modeling scheme and its implementation on Android and Windows Mobile. Our experimental results using a diverse set of applications confirm that the new model significantly improves the fine-grained as well as whole-application energy consumption accuracy. We further demonstrate fine-grained energy accounting enabled by such a fined-grained power model, via amanually implemented eprof, the energy counterpart of the classic gprof tool, for profiling application energy drain.},
	urldate = {2016-06-29},
	booktitle = {Proceedings of the {Sixth} {Conference} on {Computer} {Systems}},
	publisher = {ACM},
	author = {Pathak, Abhinav and Hu, Y. Charlie and Zhang, Ming and Bahl, Paramvir and Wang, Yi-Min},
	year = {2011},
	keywords = {energy, Mobile, Smartphone},
	pages = {153--168},
	file = {Pathak et al. - 2011 - Fine-grained Power Modeling for Smartphones Using .pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Pathak et al. - 2011 - Fine-grained Power Modeling for Smartphones Using .pdf:application/pdf}
}


@inproceedings{pinto_refactoring_2015,
	title = {Refactoring for {Energy} {Efficiency}: {A} {Reflection} on the {State} of the {Art}},
	shorttitle = {Refactoring for {Energy} {Efficiency}},
	doi = {10.1109/GREENS.2015.12},
	abstract = {Recent refactoring research introduced several innovations addressing diverse goals, such code extensibility, reusability, and testability. However, energy consumption, a critical property of any software system, remains unaddressed by refactoring research. In this paper, we provide an accounting of some of the recent and successful state-of-the-art research on software energy consumption. Through an investigation on premiere software engineering venues, we identify and discuss 12 contributions that can be further instantiated in refactoring tools used to improve software energy efficiency – and the challenges behind this process. These opportunities span a wide range of software characteristics, such as mobile applications and concurrent programming. Mobile applications is the topic with the greatest number of opportunities (6 out of 11). The study serves as a call to action for refactoring researchers interested in software energy consumption issues.},
	booktitle = {2015 {IEEE}/{ACM} 4th {International} {Workshop} on {Green} and {Sustainable} {Software} ({GREENS})},
	author = {Pinto, G. and Soares-Neto, F. and Castor, F.},
	month = may,
	year = {2015},
	keywords = {code extensibility, code reusability, code testability, Computer languages, concurrency (computers), concurrent programming, Energy consumption, Engines, Graphics processing units, premiere software engineering venue, Programming, program testing, refactoring research, refactoring tool, safety-critical software, software characteristics, software energy consumption, software energy efficiency, Software engineering, software system, source code (software)},
	pages = {29--35},
	file = {Pinto et al. - 2015 - Refactoring for Energy Efficiency A Reflection on.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Pinto et al. - 2015 - Refactoring for Energy Efficiency A Reflection on.pdf:application/pdf}
}


@inproceedings{sampson_enerj:_2011,
	address = {New York, NY, USA},
	series = {{PLDI} '11},
	title = {{EnerJ}: {Approximate} {Data} {Types} for {Safe} and {General} {Low}-power {Computation}},
	isbn = {978-1-4503-0663-8},
	shorttitle = {{EnerJ}},
	url = {http://doi.acm.org/10.1145/1993498.1993518},
	doi = {10.1145/1993498.1993518},
	abstract = {Energy is increasingly a first-order concern in computer systems. Exploiting energy-accuracy trade-offs is an attractive choice in applications that can tolerate inaccuracies. Recent work has explored exposing this trade-off in programming models. A key challenge, though, is how to isolate parts of the program that must be precise from those that can be approximated so that a program functions correctly even as quality of service degrades. We propose using type qualifiers to declare data that may be subject to approximate computation. Using these types, the system automatically maps approximate variables to low-power storage, uses low-power operations, and even applies more energy-efficient algorithms provided by the programmer. In addition, the system can statically guarantee isolation of the precise program component from the approximate component. This allows a programmer to control explicitly how information flows from approximate data to precise data. Importantly, employing static analysis eliminates the need for dynamic checks, further improving energy savings. As a proof of concept, we develop EnerJ, an extension to Java that adds approximate data types. We also propose a hardware architecture that offers explicit approximate storage and computation. We port several applications to EnerJ and show that our extensions are expressive and effective; a small number of annotations lead to significant potential energy savings (10\%-50\%) at very little accuracy cost.},
	urldate = {2017-02-08},
	booktitle = {Proceedings of the 32Nd {ACM} {SIGPLAN} {Conference} on {Programming} {Language} {Design} and {Implementation}},
	publisher = {ACM},
	author = {Sampson, Adrian and Dietl, Werner and Fortuna, Emily and Gnanapragasam, Danushen and Ceze, Luis and Grossman, Dan},
	year = {2011},
	keywords = {accuracy-aware computing, critical data, energy, power-aware computing, soft errors},
	pages = {164--174},
	file = {ACM Full Text PDF:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\9W27NHVJ\\Sampson et al. - 2011 - EnerJ Approximate Data Types for Safe and General.pdf:application/pdf;p164-sampson.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\p164-sampson.pdf:application/pdf}
}


@inproceedings{hindle_greenminer:_2014,
	address = {New York, NY, USA},
	series = {{MSR} 2014},
	title = {{GreenMiner}: {A} {Hardware} {Based} {Mining} {Software} {Repositories} {Software} {Energy} {Consumption} {Framework}},
	isbn = {978-1-4503-2863-0},
	shorttitle = {{GreenMiner}},
	url = {http://doi.acm.org/10.1145/2597073.2597097},
	doi = {10.1145/2597073.2597097},
	abstract = {Green Mining is a field of MSR that studies software energy consumption and relies on software performance data. Unfortunately there is a severe lack of publicly available software power use performance data. This means that green mining researchers must generate this data themselves by writing tests, building multiple revisions of a product, and then running these tests multiple times (10+) for each software revision while measuring power use. Then, they must aggregate these measurements to estimate the energy consumed by the tests for each software revision. This is time consuming and is made more difficult by the constraints of mobile devices and their OSes. In this paper we propose, implement, and demonstrate Green Miner: the first dedicated hardware mining software repositories testbed. The Green Miner physically measures the energy consumption of mobile devices (Android phones) and automates the testing of applications, and the reporting of measurements back to developers and researchers. The Green Miner has already produced valuable results for commercial Android application developers, and has been shown to replicate other power studies' results.},
	urldate = {2017-02-07},
	booktitle = {Proceedings of the 11th {Working} {Conference} on {Mining} {Software} {Repositories}},
	publisher = {ACM},
	author = {Hindle, Abram and Wilson, Alex and Rasmussen, Kent and Barlow, E. Jed and Campbell, Joshua Charles and Romansky, Stephen},
	year = {2014},
	keywords = {android, software change, software energy consumption},
	pages = {12--21},
	file = {ACM Full Text PDF:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\FUF6PRS7\\Hindle et al. - 2014 - GreenMiner A Hardware Based Mining Software Repos.pdf:application/pdf;Hindle et al. - 2014 - GreenMiner A Hardware Based Mining Software Repos.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Hindle et al. - 2014 - GreenMiner A Hardware Based Mining Software Repos.pdf:application/pdf}
}


@article{procaccianti_empirical_2016,
	title = {Empirical evaluation of two best practices for energy-efficient software development},
	volume = {117},
	issn = {0164-1212},
	url = {http://www.sciencedirect.com/science/article/pii/S0164121216000777},
	doi = {10.1016/j.jss.2016.02.035},
	abstract = {Background. Energy efficiency is an increasingly important property of software. A large number of empirical studies have been conducted on the topic. However, current state-of-the-Art does not provide empirically-validated guidelines for developing energy-efficient software.
	
	Aim. This study aims at assessing the impact, in terms of energy savings, of best practices for achieving software energy efficiency, elicited from previous work. By doing so, it identifies which resources are affected by the practices and the possible trade-offs with energy consumption.
	
	Method. We performed an empirical experiment in a controlled environment, where we applied two different Green Software practices to two software applications, namely query optimization in MySQL Server and usage of “sleep” instruction in the Apache web server. We then performed a comparison of the energy consumption at system-level and at resource-level, before and after applying the practice.
	
	Results. Our results show that both practices are effective in improving software energy efficiency, reducing consumption up to 25\%. We observe that after applying the practices, resource usage is more energy-proportional i.e., increasing CPU usage increases energy consumption in an almost linear way. We also provide our reflections on empirical experimentation in software energy efficiency.
	
	Conclusions. Our contribution shows that significant improvements in software energy efficiency can be gained by applying best practices during design and development. Future work will be devoted to further validate best practices, and to improve their reusability.},
	urldate = {2016-05-17},
	journal = {Journal of Systems and Software},
	author = {Procaccianti, Giuseppe and Fernández, Héctor and Lago, Patricia},
	month = jul,
	year = {2016},
	keywords = {Best practices, energy efficiency, Software engineering},
	pages = {185--198},
	file = {Procaccianti et al. - 2016 - Empirical evaluation of two best practices for ene.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Procaccianti et al. - 2016 - Empirical evaluation of two best practices for ene.pdf:application/pdf}
}


@article{noureddine_review_2013,
	title = {A {Review} of {Energy} {Measurement} {Approaches}},
	volume = {47},
	issn = {0163-5980},
	url = {http://doi.acm.org/10.1145/2553070.2553077},
	doi = {10.1145/2553070.2553077},
	abstract = {Reducing the energy footprint of digital devices and software is a task challenging the research in Green IT. Researches have proposed approaches for energy management, ranging from reducing usage of software and hardware, compilators optimization, to server consolidation and software migration. However, optimizing the energy consumption requires knowledge of that said consumption. In particular, measuring the energy consumption of hardware and software is an important requirement for efficient energy strategies. In this review, we outline the different categories of approaches in energy measurements, and provide insights into example of each category. We draw recommendations from our review on requirements on how to efficiently measure energy consumption of devices and software.},
	number = {3},
	urldate = {2016-08-30},
	journal = {SIGOPS Oper. Syst. Rev.},
	author = {Noureddine, Adel and Rouvoy, Romain and Seinturier, Lionel},
	month = nov,
	year = {2013},
	keywords = {Energy management, Energy measurement, energy metrics, review, survey},
	pages = {42--49},
	file = {Noureddine et al. - 2013 - A Review of Energy Measurement Approaches.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Noureddine et al. - 2013 - A Review of Energy Measurement Approaches.pdf:application/pdf}
}


@article{bozzelli_systematic_2013,
	title = {A systematic literature review on green software metrics},
	url = {https://pdfs.semanticscholar.org/7f7d/7e7d53febd451e263784b59c1c9038474499.pdf},
	urldate = {2017-02-22},
	author = {Bozzelli, Paolo and Gu, Qing and Lago, Patricia},
		year = {2013}
	file = {Bozzelli et al. - A systematic literature review on green software m.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Bozzelli et al. - A systematic literature review on green software m.pdf:application/pdf;[PDF] semanticscholar.org:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\83PJE6GA\\Bozzelli et al. - A systematic literature review on green software m.pdf:application/pdf}
}


@inproceedings{linares-vasquez_mining_2014,
	address = {New York, NY, USA},
	series = {{MSR} 2014},
	title = {Mining {Energy}-greedy {API} {Usage} {Patterns} in {Android} {Apps}: {An} {Empirical} {Study}},
	isbn = {978-1-4503-2863-0},
	shorttitle = {Mining {Energy}-greedy {API} {Usage} {Patterns} in {Android} {Apps}},
	url = {http://doi.acm.org/10.1145/2597073.2597085},
	doi = {10.1145/2597073.2597085},
	abstract = {Energy consumption of mobile applications is nowadays a hot topic, given the widespread use of mobile devices. The high demand for features and improved user experience, given the available powerful hardware, tend to increase the apps’ energy consumption. However, excessive energy consumption in mobile apps could also be a consequence of energy greedy hardware, bad programming practices, or particular API usage patterns. We present the largest to date quantitative and qualitative empirical investigation into the categories of API calls and usage patterns that—in the context of the Android development framework—exhibit particularly high energy consumption profiles. By using a hardware power monitor, we measure energy consumption of method calls when executing typical usage scenarios in 55 mobile apps from different domains. Based on the collected data, we mine and analyze energy-greedy APIs and usage patterns. We zoom in and discuss the cases where either the anomalous energy consumption is unavoidable or where it is due to suboptimal usage or choice of APIs. Finally, we synthesize our findings into actionable knowledge and recipes for developers on how to reduce energy consumption while using certain categories of Android APIs and patterns},
	urldate = {2016-03-08},
	booktitle = {Proceedings of the 11th {Working} {Conference} on {Mining} {Software} {Repositories}},
	publisher = {ACM},
	author = {Linares-Vásquez, Mario and Bavota, Gabriele and Bernal-Cárdenas, Carlos and Oliveto, Rocco and Di Penta, Massimiliano and Poshyvanyk, Denys},
	year = {2014},
	keywords = {Empirical study, Energy consumption, mobile applications},
	pages = {2--11},
	file = {Linares-Vásquez et al. - 2014 - Mining Energy-greedy API Usage Patterns in Android.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Linares-Vásquez et al. - 2014 - Mining Energy-greedy API Usage Patterns in Android.pdf:application/pdf}
}


@inproceedings{tonini_analysis_2013,
	title = {Analysis and {Evaluation} of the {Android} {Best} {Practices} {Impact} on the {Efficiency} of {Mobile} {Applications}},
	doi = {10.1109/SBESC.2013.39},
	abstract = {This paper evaluates the impacts of two most promising Android best practices regarding performance and energy consumption. In the experiments, the practices are applied to the code of an Android application and the code efficiency on different mobile devices is analyzed. Experimental results indicate that the use of the most appropriate for syntax and the avoiding getters/setters improves the Android codes efficiency.},
	booktitle = {2013 {III} {Brazilian} {Symposium} on {Computing} {Systems} {Engineering}},
	author = {Tonini, A. R. and Fischer, L. M. and Mattos, J. C. B. d and Brisolara, L. B. d},
	month = dec,
	year = {2013},
	keywords = {android, Android application, Android best practices impact, Android codes efficiency, Android (operating system), Androids, Best practices, Energy consumption, Google, Humanoid robots, mobile applications, mobile computing, mobile devices, Mobile handsets, performance, performance evaluation},
	pages = {157--158},
	file = {Tonini et al. - 2013 - Analysis and Evaluation of the Android Best Practi.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Tonini et al. - 2013 - Analysis and Evaluation of the Android Best Practi.pdf:application/pdf}
}


@article{procaccianti_empirical_2016,
	title = {Empirical evaluation of two best practices for energy-efficient software development},
	volume = {117},
	issn = {0164-1212},
	url = {http://www.sciencedirect.com/science/article/pii/S0164121216000777},
	doi = {10.1016/j.jss.2016.02.035},
	abstract = {Background. Energy efficiency is an increasingly important property of software. A large number of empirical studies have been conducted on the topic. However, current state-of-the-Art does not provide empirically-validated guidelines for developing energy-efficient software.
	
	Aim. This study aims at assessing the impact, in terms of energy savings, of best practices for achieving software energy efficiency, elicited from previous work. By doing so, it identifies which resources are affected by the practices and the possible trade-offs with energy consumption.
	
	Method. We performed an empirical experiment in a controlled environment, where we applied two different Green Software practices to two software applications, namely query optimization in MySQL Server and usage of “sleep” instruction in the Apache web server. We then performed a comparison of the energy consumption at system-level and at resource-level, before and after applying the practice.
	
	Results. Our results show that both practices are effective in improving software energy efficiency, reducing consumption up to 25\%. We observe that after applying the practices, resource usage is more energy-proportional i.e., increasing CPU usage increases energy consumption in an almost linear way. We also provide our reflections on empirical experimentation in software energy efficiency.
	
	Conclusions. Our contribution shows that significant improvements in software energy efficiency can be gained by applying best practices during design and development. Future work will be devoted to further validate best practices, and to improve their reusability.},
	urldate = {2016-05-17},
	journal = {Journal of Systems and Software},
	author = {Procaccianti, Giuseppe and Fernández, Héctor and Lago, Patricia},
	month = jul,
	year = {2016},
	keywords = {Best practices, energy efficiency, Software engineering},
	pages = {185--198},
	file = {Procaccianti et al. - 2016 - Empirical evaluation of two best practices for ene.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Procaccianti et al. - 2016 - Empirical evaluation of two best practices for ene.pdf:application/pdf}
}


@inproceedings{li_investigation_2014,
	address = {New York, NY, USA},
	series = {{GREENS} 2014},
	title = {An {Investigation} into {Energy}-saving {Programming} {Practices} for {Android} {Smartphone} {App} {Development}},
	isbn = {978-1-4503-2844-9},
	url = {http://doi.acm.org/10.1145/2593743.2593750},
	doi = {10.1145/2593743.2593750},
	abstract = {Developing energy efficient mobile applications is an impor- tant goal for software developers as energy usage can di- rectly affect the usability of a mobile device. Unfortunately, developers lack guidance as to how to improve the energy efficiency of their implementation and which practices are most useful. In this paper we conducted a small-scale em- pirical evaluation of commonly suggested energy-saving and performance-enhancing coding practices. In the evaluation we evaluated the degree to which these practices were able to save energy as compared to their unoptimized code coun- terparts. Our results provide useful guidance for mobile app developers. In particular, we found that bundling network packets up to a certain size and using certain coding prac- tices for reading array length information, accessing class fields, and performing invocations all led to reduced energy consumption. However, other practices, such as limiting memory usage had a very minimal impact on energy us- age. These results serve to inform the developer community about specific coding practices that can help lower the over- all energy consumption and improve the usability of their applications.},
	urldate = {2016-03-16},
	booktitle = {Proceedings of the 3rd {International} {Workshop} on {Green} and {Sustainable} {Software}},
	publisher = {ACM},
	author = {Li, Ding and Halfond, William G. J.},
	year = {2014},
	keywords = {energy, Programming patterns},
	pages = {46--53},
	file = {Li and Halfond - 2014 - An Investigation into Energy-saving Programming Pr.pdf:C\:\\Users\\Stefanos\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Li and Halfond - 2014 - An Investigation into Energy-saving Programming Pr.pdf:application/pdf}
}


@article{di_nucci_software-based_2017,
	title = {Software-{Based} {Energy} {Profiling} of {Android} {Apps}: {Simple}, {Efficient} and {Reliable}?},
	shorttitle = {Software-{Based} {Energy} {Profiling} of {Android} {Apps}},
	url = {http://orbilu.uni.lu/handle/10993/29378},
	language = {en},
	urldate = {2017-02-23},
	journal = {Software Analysis Evolution and Reengineering (SANER)},
	author = {Di Nucci, Dario and Palomba, Fabio and Prota, Antonio and Panichella, Annibale and Zaidman, Andy and De Lucia, Andrea},
	month = feb,
	year = {2017},
	file = {Di Nucci et al. - 2017 - Software-Based Energy Profiling of Android Apps S.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Di Nucci et al. - 2017 - Software-Based Energy Profiling of Android Apps S.pdf:application/pdf;Snapshot:D\:\\Users\\SGI\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8cih0sf8.default\\zotero\\storage\\UJCGAWSX\\29378.html:text/html}
}


@inproceedings{jagroep_profiling_2015,
	address = {New York, NY, USA},
	series = {{SAC} '15},
	title = {Profiling {Energy} {Profilers}},
	isbn = {978-1-4503-3196-8},
	url = {http://doi.acm.org/10.1145/2695664.2695825},
	doi = {10.1145/2695664.2695825},
	abstract = {While energy is directly consumed by hardware, it is the software that provides the instructions to do so. Energy profilers provide a means to measure the energy consumption of software, enabling the user to take measures in making software more sustainable. Although each energy profiler has access to roughly the same data, the reported measurements can differ significantly between energy profilers. In this research, energy profilers are evaluated through a series of experiments on their functionality and the accuracy of the reported measurements. The results show that there is still work to be done before these software tools can be safely used for their intended purpose. As a start, a correction factor is suggested for the energy profilers.},
	urldate = {2016-11-22},
	booktitle = {Proceedings of the 30th {Annual} {ACM} {Symposium} on {Applied} {Computing}},
	publisher = {ACM},
	author = {Jagroep, Erik and van der Werf, Jan Martijn E. M. and Jansen, Slinger and Ferreira, Miguel and Visser, Joost},
	year = {2015},
	keywords = {Accuracy, energy profilers, Sustainable Software},
	pages = {2198--2203},
	file = {Jagroep et al. - 2015 - Profiling Energy Profilers.pdf:D\:\\Users\\SGI\\Dropbox\\PhD - Energy Efficiecny in Cloud Computing Systems\\Zotero Bib\\Software Engineering\\Jagroep et al. - 2015 - Profiling Energy Profilers.pdf:application/pdf}
}


@article{blumofe_scheduling_1999,
	title = {Scheduling {Multithreaded} {Computations} by {Work} {Stealing}},
	volume = {46},
	issn = {0004-5411},
	url = {http://doi.acm.org/10.1145/324133.324234},
	doi = {10.1145/324133.324234},
	abstract = {This paper studies the problem of efficiently schedulling fully strict (i.e., well-structured) multithreaded computations on parallel computers. A popular and practical method of scheduling this kind of dynamic MIMD-style computation is “work stealing,” in which processors needing work steal computational threads from other processors. In this paper, we give the first provably good work-stealing scheduler for multithreaded computations with dependencies.Specifically, our analysis shows that the expected time to execute a fully strict computation on P processors using our work-stealing scheduler is T1/P + O(T  ∞ , where  T1 is the minimum serial execution time of the multithreaded computation and (T  ∞ is the minimum execution time with an infinite number of processors. Moreover, the space required by the execution is at most S1P, where  S1 is the minimum serial space requirement. We also show that the expected total communication of the algorithm is at most O(PT  ∞ ( 1 +  nd)Smax), where Smax is the size of the largest activation record of any thread and  nd is the maximum number of times that any thread synchronizes with its parent. This communication bound justifies the folk wisdom that work-stealing schedulers are more communication efficient than their work-sharing counterparts. All three of these bounds are existentially optimal to within a constant factor.},
	number = {5},
	urldate = {2017-03-15},
	journal = {J. ACM},
	author = {Blumofe, Robert D. and Leiserson, Charles E.},
	month = sep,
	year = {1999},
	keywords = {critical-path length, multiprocessor, multithreading, randomized algorithm, thread scheduling, work stealing},
	pages = {720--748}
}


@inproceedings{carroll_analysis_2010,
	address = {Berkeley, CA, USA},
	series = {{USENIXATC}'10},
	title = {An {Analysis} of {Power} {Consumption} in a {Smartphone}},
	url = {http://dl.acm.org/citation.cfm?id=1855840.1855861},
	abstract = {Mobile consumer-electronics devices, especially phones, are powered from batteries which are limited in size and therefore capacity. This implies that managing energy well is paramount in such devices. Good energy management requires a good understanding of where and how the energy is used. To this end we present a detailed analysis of the power consumption of a recent mobile phone, the Openmoko Neo Freerunner. We measure not only overall system power, but the exact breakdown of power consumption by the device's main hardware components. We present this power breakdown for micro-benchmarks as well as for a number of realistic usage scenarios. These results are validated by overall power measurements of two other devices: the HTC Dream and Google Nexus One. We develop a power model of the Freerunner device and analyse the energy usage and battery lifetime under a number of usage patterns. We discuss the significance of the power drawn by various components, and identify the most promising areas to focus on for further improvements of power management. We also analyse the energy impact of dynamic voltage and frequency scaling of the device's application processor.},
	booktitle = {Proceedings of the 2010 {USENIX} {Conference} on {USENIX} {Annual} {Technical} {Conference}},
	publisher = {USENIX Association},
	author = {Carroll, Aaron and Heiser, Gernot},
	year = {2010},
	pages = {21--21}
}

@inproceedings{PCL14,
	author = {Pinto, Gustavo and Castor, Fernando and Liu, Yu David},
	title = {Mining Questions About Software Energy Consumption},
	booktitle = {Proceedings of the 11th Working Conference on Mining Software Repositories},
	series = {MSR 2014},
	year = {2014},
	isbn = {978-1-4503-2863-0},
	location = {Hyderabad, India},
	pages = {22--31},
	numpages = {10},
	doi = {10.1145/2597073.2597110},
	acmid = {2597110},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Practitioners, Q\&A, Software Energy Consumption},
} 

@inproceedings{SDF11,
	author = {Sampson, Adrian and Dietl, Werner and Fortuna, Emily and Gnanapragasam, Danushen and Ceze, Luis and Grossman, Dan},
	title = {Ener{J}: Approximate Data Types for Safe and General Low-power Computation},
	booktitle = {Proceedings of the 32Nd ACM SIGPLAN Conference on Programming Language Design and Implementation},
	series = {PLDI '11},
	year = {2011},
	isbn = {978-1-4503-0663-8},
	location = {San Jose, California, USA},
	pages = {164--174},
	numpages = {11},
	doi = {10.1145/1993498.1993518},
	acmid = {1993518},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {accuracy-aware computing, critical data, energy, power-aware computing, soft errors},
}



@inproceedings{MR13,
	author = {Meyerovich, Leo A. and Rabkin, Ariel S.},
	title = {Empirical Analysis of Programming Language Adoption},
	booktitle = {Proceedings of the 2013 ACM SIGPLAN International Conference on Object Oriented Programming Systems Languages \&\#38; Applications},
	series = {OOPSLA '13},
	year = {2013},
	isbn = {978-1-4503-2374-1},
	location = {Indianapolis, Indiana, USA},
	pages = {1--18},
	numpages = {18},
	doi = {10.1145/2509136.2509515},
	acmid = {2509515},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {programming language adoption, survey research},
} 

@INPROCEEDINGS{PFW11,
	author={G. P. Perrucci and F. H. P. Fitzek and J. Widmer},
	booktitle={2011 IEEE 73rd Vehicular Technology Conference (VTC Spring)},
	title={Survey on Energy Consumption Entities on the Smartphone Platform},
	year={2011},
	pages={1-6},
	keywords={mobile handsets;protocols;MP3 player;Moore's law discrepancy;Web page;energy consumption entiy;energy limitation;energy-hungry services;mobile devices;mobile phone battery;mobile protocols;mobile systems;multiple air interfaces;smartphone platform;wireless air interfaces;wireless data rate;Batteries;Bluetooth;Energy consumption;Energy measurement;Mobile handsets;Power demand;Switches},
	doi={10.1109/VETECS.2011.5956528},
	ISSN={1550-2252},
	month={May},}

@INPROCEEDINGS{NF15,
	author={S. Nanz and C. A. Furia},
	booktitle={2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
	title={A Comparative Study of Programming Languages in {R}osetta {C}ode},
	year={2015},
	volume={1},
	pages={778--788},
	keywords={Java;authoring languages;functional languages;object-oriented programming;program compilers;program interpreters;statistical analysis;C#;F#;Go;Haskell;Java;Python;Rosetta Code;Ruby;code repository;functional language;language interpretation;object-oriented language;procedural language;programming languages;scripting language;statistical analysis;strongly-typed language compilation;Indexes;Java;Programming;Runtime;Standards;Statistical analysis},
	doi={10.1109/ICSE.2015.90},
	ISSN={0270-5257},
	month={May},}

@INPROCEEDINGS{CZ16,
	author={X. Chen and Z. Zong},
	booktitle={2016 IEEE International Conferences on Big Data and Cloud Computing (BDCloud), Social Computing and Networking (SocialCom), Sustainable Computing and Communications (SustainCom) (BDCloud-SocialCom-SustainCom)},
	title={Android App Energy Efficiency: The Impact of Language, Runtime, Compiler, and Implementation},
	year={2016},
	pages={485-492},
	keywords={C++ language;Java;energy conservation;mobile computing;power aware computing;program compilers;smart phones;AEP;ART runtime;Android application energy efficiency;Android energy profiler;Android-based phones;C language;C++ language;Dalvik runtime;Google Play;Java;battery life;battery power;compiler optimization;mobile applications;smart phones;Batteries;Energy consumption;Google;Power demand;Power measurement;Runtime;Smart phones},
	doi={10.1109/BDCloud-SocialCom-SustainCom.2016.77},
	month={Oct},}

@inproceedings{LBB14,
	author = {Linares-V\'{a}squez, Mario and Bavota, Gabriele and Bernal-C\'{a}rdenas, Carlos and Oliveto, Rocco and Di Penta, Massimiliano and Poshyvanyk, Denys},
	title = {Mining Energy-greedy {API} Usage Patterns in {A}ndroid Apps: An Empirical Study},
	booktitle = {Proceedings of the 11th Working Conference on Mining Software Repositories},
	series = {MSR 2014},
	year = {2014},
	isbn = {978-1-4503-2863-0},
	location = {Hyderabad, India},
	pages = {2--11},
	numpages = {10},
	url = {http://doi.acm.org/10.1145/2597073.2597085},
	doi = {10.1145/2597073.2597085},
	acmid = {2597085},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Empirical Study, Energy consumption, Mobile applications},
}

@INPROCEEDINGS{ALG14,
	author={S. Abdulsalam and D. Lakomski and Q. Gu and T. Jin and Z. Zong},
	booktitle={International Green Computing Conference},
	title={Program energy efficiency: The impact of language, compiler and implementation choices},
	year={2014},
	pages={1-6},
	keywords={data structures;fast Fourier transforms;green computing;power aware computing;program compilers;programming languages;sorting;Quicksort;code energy-efficiency;compiler choices;compiler optimization;complex cloud computing platforms;computing system energy usage reduction;data structure;dynamic arrays;fast Fourier transform;green computing;greener code writing;implementation choices;language choices;large-scale supercomputers;light-weight mobile devices;linked list insertion-deletion;optimization flag;program energy efficiency;software developers;Arrays;Java;Libraries;Optimization;Resource management;Software;Vectors;energy-efficient programming;green computing;software optimization},
	doi={10.1109/IGCC.2014.7039169},
	month={Nov},}

@article{RAT15,
	author = {Mohammad Rashid, and Luca Ardito, and Marco Torchiano, },
	title = {Energy Consumption Analysis of Algorithms Implementations},
	journal = {2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
	volume = {00},
	number = {},
	issn = {},
	year = {2015},
	pages = {1-4},
	doi = {doi.ieeecomputersociety.org/10.1109/ESEM.2015.7321198},
	publisher = {IEEE Computer Society},
	address = {Los Alamitos, CA, USA},
}

@INPROCEEDINGS{TFM13,
	author={A. R. Tonini and L. M. Fischer and J. C. B. d. Mattos and L. B. d. Brisolara},
	booktitle={2013 III Brazilian Symposium on Computing Systems Engineering},
	title={Analysis and Evaluation of the {A}ndroid Best Practices Impact on the Efficiency of Mobile Applications},
	year={2013},
	pages={157-158},
	keywords={Android (operating system);mobile computing;mobile handsets;Android application;Android best practices impact;Android codes efficiency;energy consumption;mobile applications;mobile devices;Androids;Best practices;Energy consumption;Google;Humanoid robots;Mobile handsets;Performance evaluation;Android;best practices;energy consumption;mobile devices;performance},
	doi={10.1109/SBESC.2013.39},
	ISSN={2324-7886},
	month={Dec},}