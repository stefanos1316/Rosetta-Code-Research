constant line = " +---------+-----------------------------+-------+------+\n"
constant digits = "123456789"

function mask(integer ch)
    return power(2,ch-'1')
end function

function score(sequence guess, sequence goal)
integer bits = 0, bulls = 0, cows = 0
    for i=1 to length(guess) do
        if guess[i]=goal[i] then
            bulls += 1
        else
            bits += mask(goal[i])
        end if
    end for
    for i=1 to length(guess) do
        cows += (and_bits(bits,mask(guess[i]))!=0)
    end for
    return {bulls, cows}
end function

sequence list = {}

procedure pick(integer n, integer got, integer marker, sequence buf)
integer bits = 1
    if got>=n then
        list = append(list,buf)
    else
        for i=0 to length(digits)-1 do
            if not and_bits(marker,bits) then
                buf[got+1] = i+'1'
                pick(n, got+1, or_bits(marker,bits), buf)
            end if
            bits *= 2
        end for
    end if
end procedure

procedure filter_list(sequence guess, integer bulls, integer cows)
integer l = length(list), idx = 0
sequence bc = {bulls,cows}
    for i=1 to l do
        if score(guess,list[i])=bc then
            idx += 1
            list[idx] = list[i]
        end if
    end for
    list = list[1..idx]
end procedure

procedure game(sequence tgt)
integer n = length(tgt), attempt = 1, bulls = 0, cows
sequence guess
    pick(n,0,0,repeat(0,n))
    while bulls<n do
        guess = list[rand(length(list))]
        {bulls, cows} = score(guess,tgt)
        printf(1," | Guess %-2d| %9s    %-14s |   %d   |   %d  |\n",
                    {attempt, guess, sprintf("(from %d)",length(list)), bulls, cows})
        filter_list(guess, bulls, cows)
        attempt += 1
    end while
    puts(1,line)
end procedure

constant N = 4
sequence secret = shuffle(digits)[1..N]
printf(1,"%s | Secret  | %9s                   | BULLS | COWS |\n%s", {line, secret, line})
game(secret)
