func bernoulli_number{};     # must be declared before first used

func bern_helper(n, k) {
    binomial(n, k) * (bernoulli_number(k) / (n - k + 1));
}

func bern_diff(n, k, d) {
    n < k ? d : bern_diff(n, k + 1, d - bern_helper(n + 1, k));
}

bernoulli_number = func(n) is cached {

    n.is_one && return 1/2;
    n.is_odd && return   0;

    n > 0 ? bern_diff(n - 1, 0, 1) : 1;
}

range(0, 60).each { |i|
    var num = bernoulli_number(i) || next;
    printf("B(%2d) = %44s / %s\n", i, num.parts);
}
