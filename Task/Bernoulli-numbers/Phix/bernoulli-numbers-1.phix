include builtins\bigatom.e

constant NUM = 1, DEN = 2

type ba_frac(object r)
    return sequence(r) and length(r)=2 and bigatom(r[NUM]) and bigatom(r[DEN])
end type

function ba_gcd(bigatom u, bigatom v)
bigatom t
    u = ba_floor(ba_abs(u))
    v = ba_floor(ba_abs(v))
    while v!=BA_ZERO do
        t = u
        u = v
        v = ba_remainder(t, v)
    end while
    return u
end function

function ba_frac_normalise(bigatom n, bigatom d)
bigatom g
    if ba_compare(d,BA_ZERO)<0 then
        n = ba_sub(0,n)
        d = ba_sub(0,d)
    end if
    g = ba_gcd(n,d)
    return {ba_idivide(n,g),ba_idivide(d,g)}
end function

function ba_frac_sub(ba_frac a, ba_frac b)
bigatom {an,ad} = a,
        {bn,bd} = b
    return ba_frac_normalise(ba_sub(ba_multiply(an,bd),ba_multiply(bn,ad)),ba_multiply(ad,bd))
end function

function ba_frac_mul(ba_frac a, ba_frac b)
bigatom {an,ad} = a,
        {bn,bd} = b
    return ba_frac_normalise(ba_multiply(an,bn),ba_multiply(ad,bd))
end function
