func primes(n) {
    var (i, j) = (0, 0)
    gather {
        loop {
            i = j.next_prime
            i <= n || break
            take(i)
            j = i
        }
    }
}

func lltp(n) {
    var b = 1
    var best = nil
    var v = primes(n-1)

    while (v) {
        best = v.max
        b *= n
        v = gather {
            v.each { |vi|
                take((n-1).of { |i| i*b + vi }.grep{.is_prime}...)
            }
        }
    }

    return best
}

for i in (3..17) {
    printf("%2d %s\n", i, lltp(i))
}
